
MyProject1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000150  00800100  00001a5a  00001aee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005a  00800250  00800250  00001c3e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001965  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010fd  00000000  00000000  00003759  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000166c  00000000  00000000  00004856  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a0  00000000  00000000  00005ec4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000b424  00000000  00000000  00006164  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a24  00000000  00000000  00011588  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00011fac  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000047a9  00000000  00000000  000120a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	48 c0       	rjmp	.+144    	; 0x92 <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	4a c0       	rjmp	.+148    	; 0xca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	d0 c7       	rjmp	.+4000   	; 0xff2 <__vector_20>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2c 01       	movw	r4, r24
      7e:	be 01       	movw	r22, r28
      80:	38 02       	muls	r19, r24
      82:	9c 02       	muls	r25, r28
      84:	d9 02       	muls	r29, r25
      86:	20 03       	mulsu	r18, r16
      88:	6b 03       	fmul	r22, r19
      8a:	f6 03       	fmuls	r23, r22
      8c:	8b 04       	cpc	r8, r11
      8e:	27 01       	movw	r4, r14
      90:	81 05       	cpc	r24, r1

00000092 <__ctors_end>:
      92:	11 24       	eor	r1, r1
      94:	1f be       	out	0x3f, r1	; 63
      96:	cf ef       	ldi	r28, 0xFF	; 255
      98:	d4 e0       	ldi	r29, 0x04	; 4
      9a:	de bf       	out	0x3e, r29	; 62
      9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
      9e:	12 e0       	ldi	r17, 0x02	; 2
      a0:	a0 e0       	ldi	r26, 0x00	; 0
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	ea e5       	ldi	r30, 0x5A	; 90
      a6:	fa e1       	ldi	r31, 0x1A	; 26
      a8:	02 c0       	rjmp	.+4      	; 0xae <__do_copy_data+0x10>
      aa:	05 90       	lpm	r0, Z+
      ac:	0d 92       	st	X+, r0
      ae:	a0 35       	cpi	r26, 0x50	; 80
      b0:	b1 07       	cpc	r27, r17
      b2:	d9 f7       	brne	.-10     	; 0xaa <__do_copy_data+0xc>

000000b4 <__do_clear_bss>:
      b4:	22 e0       	ldi	r18, 0x02	; 2
      b6:	a0 e5       	ldi	r26, 0x50	; 80
      b8:	b2 e0       	ldi	r27, 0x02	; 2
      ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
      bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
      be:	aa 3a       	cpi	r26, 0xAA	; 170
      c0:	b2 07       	cpc	r27, r18
      c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>
      c4:	7e d6       	rcall	.+3324   	; 0xdc2 <main>
      c6:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <can_clear_all_mob>:
uint8_t  mob_number;
/*
    uint8_t  data_index;
*/

    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
      cc:	80 e0       	ldi	r24, 0x00	; 0
    {
        CANPAGE = (mob_number << 4);    //! Page index
      ce:	ad ee       	ldi	r26, 0xED	; 237
      d0:	b0 e0       	ldi	r27, 0x00	; 0
      d2:	98 2f       	mov	r25, r24
      d4:	92 95       	swap	r25
      d6:	90 7f       	andi	r25, 0xF0	; 240
      d8:	9c 93       	st	X, r25
        Can_clear_mob();                //! All MOb Registers=0
      da:	ee ee       	ldi	r30, 0xEE	; 238
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	11 92       	st	Z+, r1
      e0:	e8 3f       	cpi	r30, 0xF8	; 248
      e2:	f1 05       	cpc	r31, r1
      e4:	e1 f7       	brne	.-8      	; 0xde <can_clear_all_mob+0x12>
uint8_t  mob_number;
/*
    uint8_t  data_index;
*/

    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
      e6:	8f 5f       	subi	r24, 0xFF	; 255
      e8:	86 30       	cpi	r24, 0x06	; 6
      ea:	99 f7       	brne	.-26     	; 0xd2 <can_clear_all_mob+0x6>
        {
            CANMSG = 0;                 //! MOb data FIFO
        }
*/
    }
}
      ec:	08 95       	ret

000000ee <can_get_mob_free>:
//------------------------------------------------------------------------------
uint8_t can_get_mob_free(void)
{
    uint8_t mob_number, page_saved;

    page_saved = CANPAGE;
      ee:	ed ee       	ldi	r30, 0xED	; 237
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	20 81       	ld	r18, Z
    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
    {
        Can_set_mob(mob_number);
      f4:	10 82       	st	Z, r1
        if ((CANCDMOB & 0xC0) == 0x00) //! Disable configuration
      f6:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
      fa:	80 7c       	andi	r24, 0xC0	; 192
      fc:	69 f0       	breq	.+26     	; 0x118 <can_get_mob_free+0x2a>
      fe:	81 e0       	ldi	r24, 0x01	; 1
    uint8_t mob_number, page_saved;

    page_saved = CANPAGE;
    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
    {
        Can_set_mob(mob_number);
     100:	ad ee       	ldi	r26, 0xED	; 237
     102:	b0 e0       	ldi	r27, 0x00	; 0
        if ((CANCDMOB & 0xC0) == 0x00) //! Disable configuration
     104:	ef ee       	ldi	r30, 0xEF	; 239
     106:	f0 e0       	ldi	r31, 0x00	; 0
    uint8_t mob_number, page_saved;

    page_saved = CANPAGE;
    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
    {
        Can_set_mob(mob_number);
     108:	98 2f       	mov	r25, r24
     10a:	92 95       	swap	r25
     10c:	90 7f       	andi	r25, 0xF0	; 240
     10e:	9c 93       	st	X, r25
        if ((CANCDMOB & 0xC0) == 0x00) //! Disable configuration
     110:	90 81       	ld	r25, Z
     112:	90 7c       	andi	r25, 0xC0	; 192
     114:	29 f4       	brne	.+10     	; 0x120 <can_get_mob_free+0x32>
     116:	01 c0       	rjmp	.+2      	; 0x11a <can_get_mob_free+0x2c>
uint8_t can_get_mob_free(void)
{
    uint8_t mob_number, page_saved;

    page_saved = CANPAGE;
    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
     118:	80 e0       	ldi	r24, 0x00	; 0
    {
        Can_set_mob(mob_number);
        if ((CANCDMOB & 0xC0) == 0x00) //! Disable configuration
        {
            CANPAGE = page_saved;
     11a:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
            return (mob_number);
     11e:	08 95       	ret
uint8_t can_get_mob_free(void)
{
    uint8_t mob_number, page_saved;

    page_saved = CANPAGE;
    for (mob_number = 0; mob_number < NB_MOB; mob_number++)
     120:	8f 5f       	subi	r24, 0xFF	; 255
     122:	86 30       	cpi	r24, 0x06	; 6
     124:	89 f7       	brne	.-30     	; 0x108 <can_get_mob_free+0x1a>
        {
            CANPAGE = page_saved;
            return (mob_number);
        }
    }
    CANPAGE = page_saved;
     126:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    return (NO_MOB);
     12a:	8f ef       	ldi	r24, 0xFF	; 255
}
     12c:	08 95       	ret

0000012e <can_get_mob_status>:
uint8_t can_get_mob_status(void)
{
    uint8_t mob_status, canstmob_copy;

    // Test if MOb ENABLE or DISABLE
    if ((CANCDMOB & 0xC0) == 0x00) {return(MOB_DISABLE);}
     12e:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     132:	80 7c       	andi	r24, 0xC0	; 192
     134:	61 f0       	breq	.+24     	; 0x14e <can_get_mob_status+0x20>

    canstmob_copy = CANSTMOB; // Copy for test integrity
     136:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>

    // If MOb is ENABLE, test if MOb is COMPLETED
    // - MOb Status = 0x20 then MOB_RX_COMPLETED
    // - MOb Status = 0x40 then MOB_TX_COMPLETED
    // - MOb Status = 0xA0 then MOB_RX_COMPLETED_DLCW
    mob_status = canstmob_copy & ((1<<DLCW)|(1<<TXOK)|(1<<RXOK));
     13a:	98 2f       	mov	r25, r24
     13c:	90 7e       	andi	r25, 0xE0	; 224
    if ( (mob_status==MOB_RX_COMPLETED) ||   \
     13e:	90 32       	cpi	r25, 0x20	; 32
     140:	41 f0       	breq	.+16     	; 0x152 <can_get_mob_status+0x24>
     142:	90 34       	cpi	r25, 0x40	; 64
     144:	41 f0       	breq	.+16     	; 0x156 <can_get_mob_status+0x28>
         (mob_status==MOB_TX_COMPLETED) ||   \
     146:	90 3a       	cpi	r25, 0xA0	; 160
     148:	41 f0       	breq	.+16     	; 0x15a <can_get_mob_status+0x2c>
    // - MOb Status bit_0 = MOB_ACK_ERROR
    // - MOb Status bit_1 = MOB_FORM_ERROR
    // - MOb Status bit_2 = MOB_CRC_ERROR
    // - MOb Status bit_3 = MOB_STUFF_ERROR
    // - MOb Status bit_4 = MOB_BIT_ERROR
    mob_status = canstmob_copy & ERR_MOB_MSK;
     14a:	8f 71       	andi	r24, 0x1F	; 31
     14c:	08 95       	ret
uint8_t can_get_mob_status(void)
{
    uint8_t mob_status, canstmob_copy;

    // Test if MOb ENABLE or DISABLE
    if ((CANCDMOB & 0xC0) == 0x00) {return(MOB_DISABLE);}
     14e:	8f ef       	ldi	r24, 0xFF	; 255
     150:	08 95       	ret
    // - MOb Status = 0x40 then MOB_TX_COMPLETED
    // - MOb Status = 0xA0 then MOB_RX_COMPLETED_DLCW
    mob_status = canstmob_copy & ((1<<DLCW)|(1<<TXOK)|(1<<RXOK));
    if ( (mob_status==MOB_RX_COMPLETED) ||   \
         (mob_status==MOB_TX_COMPLETED) ||   \
         (mob_status==MOB_RX_COMPLETED_DLCW) ) { return(mob_status); }
     152:	80 e2       	ldi	r24, 0x20	; 32
     154:	08 95       	ret
     156:	80 e4       	ldi	r24, 0x40	; 64
     158:	08 95       	ret
     15a:	80 ea       	ldi	r24, 0xA0	; 160
    mob_status = canstmob_copy & ERR_MOB_MSK;
    if (mob_status != 0) { return(mob_status); }

    // If CANSTMOB = 0 then MOB_NOT_COMPLETED
    return(MOB_NOT_COMPLETED);
}
     15c:	08 95       	ret

0000015e <can_get_data>:
//! @param CAN message data address.
//!
//! @return none.
//------------------------------------------------------------------------------
void can_get_data(uint8_t* p_can_message_data)
{
     15e:	cf 93       	push	r28
     160:	df 93       	push	r29
     162:	bc 01       	movw	r22, r24
    uint8_t data_index;

    for (data_index = 0; data_index < (Can_get_dlc()); data_index++)
     164:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     168:	8f 70       	andi	r24, 0x0F	; 15
     16a:	99 f0       	breq	.+38     	; 0x192 <can_get_data+0x34>
     16c:	90 e0       	ldi	r25, 0x00	; 0
    {
        *(p_can_message_data + data_index) = CANMSG;
     16e:	ca ef       	ldi	r28, 0xFA	; 250
     170:	d0 e0       	ldi	r29, 0x00	; 0
//------------------------------------------------------------------------------
void can_get_data(uint8_t* p_can_message_data)
{
    uint8_t data_index;

    for (data_index = 0; data_index < (Can_get_dlc()); data_index++)
     172:	af ee       	ldi	r26, 0xEF	; 239
     174:	b0 e0       	ldi	r27, 0x00	; 0
    {
        *(p_can_message_data + data_index) = CANMSG;
     176:	28 81       	ld	r18, Y
     178:	fb 01       	movw	r30, r22
     17a:	e9 0f       	add	r30, r25
     17c:	f1 1d       	adc	r31, r1
     17e:	20 83       	st	Z, r18
//------------------------------------------------------------------------------
void can_get_data(uint8_t* p_can_message_data)
{
    uint8_t data_index;

    for (data_index = 0; data_index < (Can_get_dlc()); data_index++)
     180:	9f 5f       	subi	r25, 0xFF	; 255
     182:	2c 91       	ld	r18, X
     184:	49 2f       	mov	r20, r25
     186:	50 e0       	ldi	r21, 0x00	; 0
     188:	2f 70       	andi	r18, 0x0F	; 15
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	42 17       	cp	r20, r18
     18e:	53 07       	cpc	r21, r19
     190:	94 f3       	brlt	.-28     	; 0x176 <can_get_data+0x18>
    {
        *(p_can_message_data + data_index) = CANMSG;
    }
}
     192:	df 91       	pop	r29
     194:	cf 91       	pop	r28
     196:	08 95       	ret

00000198 <can_fixed_baudrate>:
//! @return Baudrate Status
//!         fixed = 1: baudrate performed
//------------------------------------------------------------------------------
uint8_t can_fixed_baudrate(uint8_t mode)
{
    Can_reset();
     198:	81 e0       	ldi	r24, 0x01	; 1
     19a:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    Can_conf_bt();
     19e:	8e e0       	ldi	r24, 0x0E	; 14
     1a0:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     1a4:	8c e0       	ldi	r24, 0x0C	; 12
     1a6:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     1aa:	87 e3       	ldi	r24, 0x37	; 55
     1ac:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    return 1;
}
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	08 95       	ret

000001b4 <can_init>:
//!         ==0: research of bit timing configuration failed
//!         ==1: baudrate performed 
//!
//------------------------------------------------------------------------------
uint8_t can_init(uint8_t mode)
{
     1b4:	f1 df       	rcall	.-30     	; 0x198 <can_fixed_baudrate>
     1b6:	88 23       	and	r24, r24
     1b8:	39 f0       	breq	.+14     	; 0x1c8 <can_init+0x14>
     1ba:	88 df       	rcall	.-240    	; 0xcc <can_clear_all_mob>
     1bc:	e8 ed       	ldi	r30, 0xD8	; 216
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	82 60       	ori	r24, 0x02	; 2
     1c4:	80 83       	st	Z, r24
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	08 95       	ret

000001ca <can_cmd>:
     1ca:	0f 93       	push	r16
     1cc:	1f 93       	push	r17
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <can_cmd+0xa>
     1d4:	00 d0       	rcall	.+0      	; 0x1d6 <can_cmd+0xc>
     1d6:	cd b7       	in	r28, 0x3d	; 61
     1d8:	de b7       	in	r29, 0x3e	; 62
     1da:	fc 01       	movw	r30, r24
     1dc:	81 81       	ldd	r24, Z+1	; 0x01
     1de:	8c 30       	cpi	r24, 0x0C	; 12
     1e0:	99 f4       	brne	.+38     	; 0x208 <can_cmd+0x3e>
     1e2:	81 85       	ldd	r24, Z+9	; 0x09
     1e4:	80 36       	cpi	r24, 0x60	; 96
     1e6:	69 f4       	brne	.+26     	; 0x202 <can_cmd+0x38>
     1e8:	80 81       	ld	r24, Z
     1ea:	82 95       	swap	r24
     1ec:	80 7f       	andi	r24, 0xF0	; 240
     1ee:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     1f2:	af ee       	ldi	r26, 0xEF	; 239
     1f4:	b0 e0       	ldi	r27, 0x00	; 0
     1f6:	8c 91       	ld	r24, X
     1f8:	8f 73       	andi	r24, 0x3F	; 63
     1fa:	8c 93       	st	X, r24
     1fc:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     200:	10 82       	st	Z, r1
     202:	11 86       	std	Z+9, r1	; 0x09
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	36 c5       	rjmp	.+2668   	; 0xc74 <__stack+0x775>
     208:	8f 01       	movw	r16, r30
     20a:	71 df       	rcall	.-286    	; 0xee <can_get_mob_free>
     20c:	8f 3f       	cpi	r24, 0xFF	; 255
     20e:	09 f4       	brne	.+2      	; 0x212 <can_cmd+0x48>
     210:	2c c5       	rjmp	.+2648   	; 0xc6a <__stack+0x76b>
     212:	90 e6       	ldi	r25, 0x60	; 96
     214:	d8 01       	movw	r26, r16
     216:	19 96       	adiw	r26, 0x09	; 9
     218:	9c 93       	st	X, r25
     21a:	19 97       	sbiw	r26, 0x09	; 9
     21c:	8c 93       	st	X, r24
     21e:	82 95       	swap	r24
     220:	80 7f       	andi	r24, 0xF0	; 240
     222:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     226:	ee ee       	ldi	r30, 0xEE	; 238
     228:	f0 e0       	ldi	r31, 0x00	; 0
     22a:	11 92       	st	Z+, r1
     22c:	e8 3f       	cpi	r30, 0xF8	; 248
     22e:	f1 05       	cpc	r31, r1
     230:	e1 f7       	brne	.-8      	; 0x22a <can_cmd+0x60>
     232:	d8 01       	movw	r26, r16
     234:	11 96       	adiw	r26, 0x01	; 1
     236:	ec 91       	ld	r30, X
     238:	8e 2f       	mov	r24, r30
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	fc 01       	movw	r30, r24
     23e:	31 97       	sbiw	r30, 0x01	; 1
     240:	eb 30       	cpi	r30, 0x0B	; 11
     242:	f1 05       	cpc	r31, r1
     244:	08 f0       	brcs	.+2      	; 0x248 <can_cmd+0x7e>
     246:	0d c5       	rjmp	.+2586   	; 0xc62 <__stack+0x763>
     248:	e2 5c       	subi	r30, 0xC2	; 194
     24a:	ff 4f       	sbci	r31, 0xFF	; 255
     24c:	84 c7       	rjmp	.+3848   	; 0x1156 <__tablejump2__>
     24e:	f8 01       	movw	r30, r16
     250:	86 81       	ldd	r24, Z+6	; 0x06
     252:	81 11       	cpse	r24, r1
     254:	f9 c3       	rjmp	.+2034   	; 0xa48 <__stack+0x549>
     256:	0a c4       	rjmp	.+2068   	; 0xa6c <__stack+0x56d>
     258:	d8 01       	movw	r26, r16
     25a:	1b 96       	adiw	r26, 0x0b	; 11
     25c:	8c 91       	ld	r24, X
     25e:	1b 97       	sbiw	r26, 0x0b	; 11
     260:	88 23       	and	r24, r24
     262:	e9 f1       	breq	.+122    	; 0x2de <can_cmd+0x114>
     264:	15 96       	adiw	r26, 0x05	; 5
     266:	8c 91       	ld	r24, X
     268:	15 97       	sbiw	r26, 0x05	; 5
     26a:	98 2f       	mov	r25, r24
     26c:	99 0f       	add	r25, r25
     26e:	99 0f       	add	r25, r25
     270:	99 0f       	add	r25, r25
     272:	14 96       	adiw	r26, 0x04	; 4
     274:	8c 91       	ld	r24, X
     276:	14 97       	sbiw	r26, 0x04	; 4
     278:	82 95       	swap	r24
     27a:	86 95       	lsr	r24
     27c:	87 70       	andi	r24, 0x07	; 7
     27e:	89 0f       	add	r24, r25
     280:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     284:	14 96       	adiw	r26, 0x04	; 4
     286:	8c 91       	ld	r24, X
     288:	14 97       	sbiw	r26, 0x04	; 4
     28a:	98 2f       	mov	r25, r24
     28c:	99 0f       	add	r25, r25
     28e:	99 0f       	add	r25, r25
     290:	99 0f       	add	r25, r25
     292:	13 96       	adiw	r26, 0x03	; 3
     294:	8c 91       	ld	r24, X
     296:	13 97       	sbiw	r26, 0x03	; 3
     298:	82 95       	swap	r24
     29a:	86 95       	lsr	r24
     29c:	87 70       	andi	r24, 0x07	; 7
     29e:	89 0f       	add	r24, r25
     2a0:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     2a4:	13 96       	adiw	r26, 0x03	; 3
     2a6:	8c 91       	ld	r24, X
     2a8:	13 97       	sbiw	r26, 0x03	; 3
     2aa:	98 2f       	mov	r25, r24
     2ac:	99 0f       	add	r25, r25
     2ae:	99 0f       	add	r25, r25
     2b0:	99 0f       	add	r25, r25
     2b2:	12 96       	adiw	r26, 0x02	; 2
     2b4:	8c 91       	ld	r24, X
     2b6:	12 97       	sbiw	r26, 0x02	; 2
     2b8:	82 95       	swap	r24
     2ba:	86 95       	lsr	r24
     2bc:	87 70       	andi	r24, 0x07	; 7
     2be:	89 0f       	add	r24, r25
     2c0:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     2c4:	12 96       	adiw	r26, 0x02	; 2
     2c6:	8c 91       	ld	r24, X
     2c8:	88 0f       	add	r24, r24
     2ca:	88 0f       	add	r24, r24
     2cc:	88 0f       	add	r24, r24
     2ce:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     2d2:	ef ee       	ldi	r30, 0xEF	; 239
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	80 61       	ori	r24, 0x10	; 16
     2da:	80 83       	st	Z, r24
     2dc:	19 c0       	rjmp	.+50     	; 0x310 <can_cmd+0x146>
     2de:	f8 01       	movw	r30, r16
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	82 81       	ldd	r24, Z+2	; 0x02
     2e4:	86 95       	lsr	r24
     2e6:	86 95       	lsr	r24
     2e8:	86 95       	lsr	r24
     2ea:	f0 e2       	ldi	r31, 0x20	; 32
     2ec:	9f 9f       	mul	r25, r31
     2ee:	80 0d       	add	r24, r0
     2f0:	11 24       	eor	r1, r1
     2f2:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     2f6:	d8 01       	movw	r26, r16
     2f8:	12 96       	adiw	r26, 0x02	; 2
     2fa:	8c 91       	ld	r24, X
     2fc:	82 95       	swap	r24
     2fe:	88 0f       	add	r24, r24
     300:	80 7e       	andi	r24, 0xE0	; 224
     302:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     306:	ef ee       	ldi	r30, 0xEF	; 239
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	80 81       	ld	r24, Z
     30c:	8f 7e       	andi	r24, 0xEF	; 239
     30e:	80 83       	st	Z, r24
     310:	f8 01       	movw	r30, r16
     312:	86 81       	ldd	r24, Z+6	; 0x06
     314:	88 23       	and	r24, r24
     316:	91 f0       	breq	.+36     	; 0x33c <can_cmd+0x172>
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	2a ef       	ldi	r18, 0xFA	; 250
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	d8 01       	movw	r26, r16
     320:	17 96       	adiw	r26, 0x07	; 7
     322:	ed 91       	ld	r30, X+
     324:	fc 91       	ld	r31, X
     326:	18 97       	sbiw	r26, 0x08	; 8
     328:	e8 0f       	add	r30, r24
     32a:	f1 1d       	adc	r31, r1
     32c:	90 81       	ld	r25, Z
     32e:	f9 01       	movw	r30, r18
     330:	90 83       	st	Z, r25
     332:	8f 5f       	subi	r24, 0xFF	; 255
     334:	16 96       	adiw	r26, 0x06	; 6
     336:	9c 91       	ld	r25, X
     338:	89 17       	cp	r24, r25
     33a:	88 f3       	brcs	.-30     	; 0x31e <can_cmd+0x154>
     33c:	d8 01       	movw	r26, r16
     33e:	1a 96       	adiw	r26, 0x0a	; 10
     340:	8c 91       	ld	r24, X
     342:	88 23       	and	r24, r24
     344:	31 f0       	breq	.+12     	; 0x352 <can_cmd+0x188>
     346:	e0 ef       	ldi	r30, 0xF0	; 240
     348:	f0 e0       	ldi	r31, 0x00	; 0
     34a:	80 81       	ld	r24, Z
     34c:	84 60       	ori	r24, 0x04	; 4
     34e:	80 83       	st	Z, r24
     350:	05 c0       	rjmp	.+10     	; 0x35c <can_cmd+0x192>
     352:	e0 ef       	ldi	r30, 0xF0	; 240
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	80 81       	ld	r24, Z
     358:	8b 7f       	andi	r24, 0xFB	; 251
     35a:	80 83       	st	Z, r24
     35c:	ef ee       	ldi	r30, 0xEF	; 239
     35e:	f0 e0       	ldi	r31, 0x00	; 0
     360:	90 81       	ld	r25, Z
     362:	d8 01       	movw	r26, r16
     364:	16 96       	adiw	r26, 0x06	; 6
     366:	8c 91       	ld	r24, X
     368:	89 2b       	or	r24, r25
     36a:	80 83       	st	Z, r24
     36c:	80 81       	ld	r24, Z
     36e:	8f 73       	andi	r24, 0x3F	; 63
     370:	80 83       	st	Z, r24
     372:	80 81       	ld	r24, Z
     374:	80 64       	ori	r24, 0x40	; 64
     376:	80 83       	st	Z, r24
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	7c c4       	rjmp	.+2296   	; 0xc74 <__stack+0x775>
     37c:	f8 01       	movw	r30, r16
     37e:	83 85       	ldd	r24, Z+11	; 0x0b
     380:	88 23       	and	r24, r24
     382:	81 f1       	breq	.+96     	; 0x3e4 <can_cmd+0x21a>
     384:	85 81       	ldd	r24, Z+5	; 0x05
     386:	98 2f       	mov	r25, r24
     388:	99 0f       	add	r25, r25
     38a:	99 0f       	add	r25, r25
     38c:	99 0f       	add	r25, r25
     38e:	84 81       	ldd	r24, Z+4	; 0x04
     390:	82 95       	swap	r24
     392:	86 95       	lsr	r24
     394:	87 70       	andi	r24, 0x07	; 7
     396:	89 0f       	add	r24, r25
     398:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     39c:	84 81       	ldd	r24, Z+4	; 0x04
     39e:	98 2f       	mov	r25, r24
     3a0:	99 0f       	add	r25, r25
     3a2:	99 0f       	add	r25, r25
     3a4:	99 0f       	add	r25, r25
     3a6:	83 81       	ldd	r24, Z+3	; 0x03
     3a8:	82 95       	swap	r24
     3aa:	86 95       	lsr	r24
     3ac:	87 70       	andi	r24, 0x07	; 7
     3ae:	89 0f       	add	r24, r25
     3b0:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     3b4:	83 81       	ldd	r24, Z+3	; 0x03
     3b6:	98 2f       	mov	r25, r24
     3b8:	99 0f       	add	r25, r25
     3ba:	99 0f       	add	r25, r25
     3bc:	99 0f       	add	r25, r25
     3be:	82 81       	ldd	r24, Z+2	; 0x02
     3c0:	82 95       	swap	r24
     3c2:	86 95       	lsr	r24
     3c4:	87 70       	andi	r24, 0x07	; 7
     3c6:	89 0f       	add	r24, r25
     3c8:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     3cc:	82 81       	ldd	r24, Z+2	; 0x02
     3ce:	88 0f       	add	r24, r24
     3d0:	88 0f       	add	r24, r24
     3d2:	88 0f       	add	r24, r24
     3d4:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     3d8:	ef ee       	ldi	r30, 0xEF	; 239
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	80 81       	ld	r24, Z
     3de:	80 61       	ori	r24, 0x10	; 16
     3e0:	80 83       	st	Z, r24
     3e2:	17 c0       	rjmp	.+46     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     3e4:	93 81       	ldd	r25, Z+3	; 0x03
     3e6:	82 81       	ldd	r24, Z+2	; 0x02
     3e8:	86 95       	lsr	r24
     3ea:	86 95       	lsr	r24
     3ec:	86 95       	lsr	r24
     3ee:	b0 e2       	ldi	r27, 0x20	; 32
     3f0:	9b 9f       	mul	r25, r27
     3f2:	80 0d       	add	r24, r0
     3f4:	11 24       	eor	r1, r1
     3f6:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     3fa:	f8 01       	movw	r30, r16
     3fc:	82 81       	ldd	r24, Z+2	; 0x02
     3fe:	82 95       	swap	r24
     400:	88 0f       	add	r24, r24
     402:	80 7e       	andi	r24, 0xE0	; 224
     404:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     408:	ef ee       	ldi	r30, 0xEF	; 239
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	80 81       	ld	r24, Z
     40e:	8f 7e       	andi	r24, 0xEF	; 239
     410:	80 83       	st	Z, r24
     412:	d8 01       	movw	r26, r16
     414:	16 96       	adiw	r26, 0x06	; 6
     416:	8c 91       	ld	r24, X
     418:	88 23       	and	r24, r24
     41a:	91 f0       	breq	.+36     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	2a ef       	ldi	r18, 0xFA	; 250
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	d8 01       	movw	r26, r16
     424:	17 96       	adiw	r26, 0x07	; 7
     426:	ed 91       	ld	r30, X+
     428:	fc 91       	ld	r31, X
     42a:	18 97       	sbiw	r26, 0x08	; 8
     42c:	e8 0f       	add	r30, r24
     42e:	f1 1d       	adc	r31, r1
     430:	90 81       	ld	r25, Z
     432:	f9 01       	movw	r30, r18
     434:	90 83       	st	Z, r25
     436:	8f 5f       	subi	r24, 0xFF	; 255
     438:	16 96       	adiw	r26, 0x06	; 6
     43a:	9c 91       	ld	r25, X
     43c:	89 17       	cp	r24, r25
     43e:	88 f3       	brcs	.-30     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     440:	d8 01       	movw	r26, r16
     442:	1a 96       	adiw	r26, 0x0a	; 10
     444:	1c 92       	st	X, r1
     446:	1a 97       	sbiw	r26, 0x0a	; 10
     448:	e0 ef       	ldi	r30, 0xF0	; 240
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	80 81       	ld	r24, Z
     44e:	8b 7f       	andi	r24, 0xFB	; 251
     450:	80 83       	st	Z, r24
     452:	ef ee       	ldi	r30, 0xEF	; 239
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	90 81       	ld	r25, Z
     458:	16 96       	adiw	r26, 0x06	; 6
     45a:	8c 91       	ld	r24, X
     45c:	89 2b       	or	r24, r25
     45e:	80 83       	st	Z, r24
     460:	80 81       	ld	r24, Z
     462:	8f 73       	andi	r24, 0x3F	; 63
     464:	80 83       	st	Z, r24
     466:	80 81       	ld	r24, Z
     468:	80 64       	ori	r24, 0x40	; 64
     46a:	80 83       	st	Z, r24
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	02 c4       	rjmp	.+2052   	; 0xc74 <__stack+0x775>
     470:	f8 01       	movw	r30, r16
     472:	83 85       	ldd	r24, Z+11	; 0x0b
     474:	88 23       	and	r24, r24
     476:	81 f1       	breq	.+96     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     478:	85 81       	ldd	r24, Z+5	; 0x05
     47a:	98 2f       	mov	r25, r24
     47c:	99 0f       	add	r25, r25
     47e:	99 0f       	add	r25, r25
     480:	99 0f       	add	r25, r25
     482:	84 81       	ldd	r24, Z+4	; 0x04
     484:	82 95       	swap	r24
     486:	86 95       	lsr	r24
     488:	87 70       	andi	r24, 0x07	; 7
     48a:	89 0f       	add	r24, r25
     48c:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     490:	84 81       	ldd	r24, Z+4	; 0x04
     492:	98 2f       	mov	r25, r24
     494:	99 0f       	add	r25, r25
     496:	99 0f       	add	r25, r25
     498:	99 0f       	add	r25, r25
     49a:	83 81       	ldd	r24, Z+3	; 0x03
     49c:	82 95       	swap	r24
     49e:	86 95       	lsr	r24
     4a0:	87 70       	andi	r24, 0x07	; 7
     4a2:	89 0f       	add	r24, r25
     4a4:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     4a8:	83 81       	ldd	r24, Z+3	; 0x03
     4aa:	98 2f       	mov	r25, r24
     4ac:	99 0f       	add	r25, r25
     4ae:	99 0f       	add	r25, r25
     4b0:	99 0f       	add	r25, r25
     4b2:	82 81       	ldd	r24, Z+2	; 0x02
     4b4:	82 95       	swap	r24
     4b6:	86 95       	lsr	r24
     4b8:	87 70       	andi	r24, 0x07	; 7
     4ba:	89 0f       	add	r24, r25
     4bc:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     4c0:	82 81       	ldd	r24, Z+2	; 0x02
     4c2:	88 0f       	add	r24, r24
     4c4:	88 0f       	add	r24, r24
     4c6:	88 0f       	add	r24, r24
     4c8:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     4cc:	ef ee       	ldi	r30, 0xEF	; 239
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	80 81       	ld	r24, Z
     4d2:	80 61       	ori	r24, 0x10	; 16
     4d4:	80 83       	st	Z, r24
     4d6:	17 c0       	rjmp	.+46     	; 0x506 <__stack+0x7>
     4d8:	93 81       	ldd	r25, Z+3	; 0x03
     4da:	82 81       	ldd	r24, Z+2	; 0x02
     4dc:	86 95       	lsr	r24
     4de:	86 95       	lsr	r24
     4e0:	86 95       	lsr	r24
     4e2:	b0 e2       	ldi	r27, 0x20	; 32
     4e4:	9b 9f       	mul	r25, r27
     4e6:	80 0d       	add	r24, r0
     4e8:	11 24       	eor	r1, r1
     4ea:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     4ee:	f8 01       	movw	r30, r16
     4f0:	82 81       	ldd	r24, Z+2	; 0x02
     4f2:	82 95       	swap	r24
     4f4:	88 0f       	add	r24, r24
     4f6:	80 7e       	andi	r24, 0xE0	; 224
     4f8:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     4fc:	ef ee       	ldi	r30, 0xEF	; 239
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	80 81       	ld	r24, Z
     502:	8f 7e       	andi	r24, 0xEF	; 239
     504:	80 83       	st	Z, r24
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	d8 01       	movw	r26, r16
     50a:	1a 96       	adiw	r26, 0x0a	; 10
     50c:	8c 93       	st	X, r24
     50e:	1a 97       	sbiw	r26, 0x0a	; 10
     510:	e0 ef       	ldi	r30, 0xF0	; 240
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	84 60       	ori	r24, 0x04	; 4
     518:	80 83       	st	Z, r24
     51a:	ef ee       	ldi	r30, 0xEF	; 239
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	90 81       	ld	r25, Z
     520:	16 96       	adiw	r26, 0x06	; 6
     522:	8c 91       	ld	r24, X
     524:	89 2b       	or	r24, r25
     526:	80 83       	st	Z, r24
     528:	80 81       	ld	r24, Z
     52a:	8f 73       	andi	r24, 0x3F	; 63
     52c:	80 83       	st	Z, r24
     52e:	80 81       	ld	r24, Z
     530:	80 64       	ori	r24, 0x40	; 64
     532:	80 83       	st	Z, r24
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	9e c3       	rjmp	.+1852   	; 0xc74 <__stack+0x775>
     538:	19 82       	std	Y+1, r1	; 0x01
     53a:	1a 82       	std	Y+2, r1	; 0x02
     53c:	1b 82       	std	Y+3, r1	; 0x03
     53e:	1c 82       	std	Y+4, r1	; 0x04
     540:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     544:	8b 81       	ldd	r24, Y+3	; 0x03
     546:	98 2f       	mov	r25, r24
     548:	99 0f       	add	r25, r25
     54a:	99 0f       	add	r25, r25
     54c:	99 0f       	add	r25, r25
     54e:	8a 81       	ldd	r24, Y+2	; 0x02
     550:	82 95       	swap	r24
     552:	86 95       	lsr	r24
     554:	87 70       	andi	r24, 0x07	; 7
     556:	89 0f       	add	r24, r25
     558:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     55c:	8a 81       	ldd	r24, Y+2	; 0x02
     55e:	98 2f       	mov	r25, r24
     560:	99 0f       	add	r25, r25
     562:	99 0f       	add	r25, r25
     564:	99 0f       	add	r25, r25
     566:	89 81       	ldd	r24, Y+1	; 0x01
     568:	82 95       	swap	r24
     56a:	86 95       	lsr	r24
     56c:	87 70       	andi	r24, 0x07	; 7
     56e:	89 0f       	add	r24, r25
     570:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     574:	89 81       	ldd	r24, Y+1	; 0x01
     576:	88 0f       	add	r24, r24
     578:	88 0f       	add	r24, r24
     57a:	88 0f       	add	r24, r24
     57c:	24 ef       	ldi	r18, 0xF4	; 244
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	f9 01       	movw	r30, r18
     582:	80 83       	st	Z, r24
     584:	ef ee       	ldi	r30, 0xEF	; 239
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	90 81       	ld	r25, Z
     58a:	d8 01       	movw	r26, r16
     58c:	16 96       	adiw	r26, 0x06	; 6
     58e:	8c 91       	ld	r24, X
     590:	89 2b       	or	r24, r25
     592:	80 83       	st	Z, r24
     594:	d9 01       	movw	r26, r18
     596:	8c 91       	ld	r24, X
     598:	8b 7f       	andi	r24, 0xFB	; 251
     59a:	8c 93       	st	X, r24
     59c:	8c 91       	ld	r24, X
     59e:	8e 7f       	andi	r24, 0xFE	; 254
     5a0:	8c 93       	st	X, r24
     5a2:	80 81       	ld	r24, Z
     5a4:	8f 73       	andi	r24, 0x3F	; 63
     5a6:	80 83       	st	Z, r24
     5a8:	80 81       	ld	r24, Z
     5aa:	80 68       	ori	r24, 0x80	; 128
     5ac:	80 83       	st	Z, r24
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	61 c3       	rjmp	.+1730   	; 0xc74 <__stack+0x775>
     5b2:	19 82       	std	Y+1, r1	; 0x01
     5b4:	1a 82       	std	Y+2, r1	; 0x02
     5b6:	1b 82       	std	Y+3, r1	; 0x03
     5b8:	1c 82       	std	Y+4, r1	; 0x04
     5ba:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     5be:	8b 81       	ldd	r24, Y+3	; 0x03
     5c0:	98 2f       	mov	r25, r24
     5c2:	99 0f       	add	r25, r25
     5c4:	99 0f       	add	r25, r25
     5c6:	99 0f       	add	r25, r25
     5c8:	8a 81       	ldd	r24, Y+2	; 0x02
     5ca:	82 95       	swap	r24
     5cc:	86 95       	lsr	r24
     5ce:	87 70       	andi	r24, 0x07	; 7
     5d0:	89 0f       	add	r24, r25
     5d2:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     5d6:	8a 81       	ldd	r24, Y+2	; 0x02
     5d8:	98 2f       	mov	r25, r24
     5da:	99 0f       	add	r25, r25
     5dc:	99 0f       	add	r25, r25
     5de:	99 0f       	add	r25, r25
     5e0:	89 81       	ldd	r24, Y+1	; 0x01
     5e2:	82 95       	swap	r24
     5e4:	86 95       	lsr	r24
     5e6:	87 70       	andi	r24, 0x07	; 7
     5e8:	89 0f       	add	r24, r25
     5ea:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     5ee:	89 81       	ldd	r24, Y+1	; 0x01
     5f0:	88 0f       	add	r24, r24
     5f2:	88 0f       	add	r24, r24
     5f4:	88 0f       	add	r24, r24
     5f6:	44 ef       	ldi	r20, 0xF4	; 244
     5f8:	50 e0       	ldi	r21, 0x00	; 0
     5fa:	fa 01       	movw	r30, r20
     5fc:	80 83       	st	Z, r24
     5fe:	ef ee       	ldi	r30, 0xEF	; 239
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	90 81       	ld	r25, Z
     604:	d8 01       	movw	r26, r16
     606:	16 96       	adiw	r26, 0x06	; 6
     608:	8c 91       	ld	r24, X
     60a:	16 97       	sbiw	r26, 0x06	; 6
     60c:	89 2b       	or	r24, r25
     60e:	80 83       	st	Z, r24
     610:	1a 96       	adiw	r26, 0x0a	; 10
     612:	1c 92       	st	X, r1
     614:	da 01       	movw	r26, r20
     616:	8c 91       	ld	r24, X
     618:	84 60       	ori	r24, 0x04	; 4
     61a:	8c 93       	st	X, r24
     61c:	20 ef       	ldi	r18, 0xF0	; 240
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	d9 01       	movw	r26, r18
     622:	8c 91       	ld	r24, X
     624:	8b 7f       	andi	r24, 0xFB	; 251
     626:	8c 93       	st	X, r24
     628:	da 01       	movw	r26, r20
     62a:	8c 91       	ld	r24, X
     62c:	8e 7f       	andi	r24, 0xFE	; 254
     62e:	8c 93       	st	X, r24
     630:	80 81       	ld	r24, Z
     632:	8f 73       	andi	r24, 0x3F	; 63
     634:	80 83       	st	Z, r24
     636:	80 81       	ld	r24, Z
     638:	80 68       	ori	r24, 0x80	; 128
     63a:	80 83       	st	Z, r24
     63c:	80 e0       	ldi	r24, 0x00	; 0
     63e:	1a c3       	rjmp	.+1588   	; 0xc74 <__stack+0x775>
     640:	19 82       	std	Y+1, r1	; 0x01
     642:	1a 82       	std	Y+2, r1	; 0x02
     644:	1b 82       	std	Y+3, r1	; 0x03
     646:	1c 82       	std	Y+4, r1	; 0x04
     648:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     64c:	8b 81       	ldd	r24, Y+3	; 0x03
     64e:	98 2f       	mov	r25, r24
     650:	99 0f       	add	r25, r25
     652:	99 0f       	add	r25, r25
     654:	99 0f       	add	r25, r25
     656:	8a 81       	ldd	r24, Y+2	; 0x02
     658:	82 95       	swap	r24
     65a:	86 95       	lsr	r24
     65c:	87 70       	andi	r24, 0x07	; 7
     65e:	89 0f       	add	r24, r25
     660:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     664:	8a 81       	ldd	r24, Y+2	; 0x02
     666:	98 2f       	mov	r25, r24
     668:	99 0f       	add	r25, r25
     66a:	99 0f       	add	r25, r25
     66c:	99 0f       	add	r25, r25
     66e:	89 81       	ldd	r24, Y+1	; 0x01
     670:	82 95       	swap	r24
     672:	86 95       	lsr	r24
     674:	87 70       	andi	r24, 0x07	; 7
     676:	89 0f       	add	r24, r25
     678:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     67c:	89 81       	ldd	r24, Y+1	; 0x01
     67e:	88 0f       	add	r24, r24
     680:	88 0f       	add	r24, r24
     682:	88 0f       	add	r24, r24
     684:	44 ef       	ldi	r20, 0xF4	; 244
     686:	50 e0       	ldi	r21, 0x00	; 0
     688:	fa 01       	movw	r30, r20
     68a:	80 83       	st	Z, r24
     68c:	ef ee       	ldi	r30, 0xEF	; 239
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	90 81       	ld	r25, Z
     692:	d8 01       	movw	r26, r16
     694:	16 96       	adiw	r26, 0x06	; 6
     696:	8c 91       	ld	r24, X
     698:	16 97       	sbiw	r26, 0x06	; 6
     69a:	89 2b       	or	r24, r25
     69c:	80 83       	st	Z, r24
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	1a 96       	adiw	r26, 0x0a	; 10
     6a2:	8c 93       	st	X, r24
     6a4:	da 01       	movw	r26, r20
     6a6:	8c 91       	ld	r24, X
     6a8:	84 60       	ori	r24, 0x04	; 4
     6aa:	8c 93       	st	X, r24
     6ac:	20 ef       	ldi	r18, 0xF0	; 240
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	d9 01       	movw	r26, r18
     6b2:	8c 91       	ld	r24, X
     6b4:	84 60       	ori	r24, 0x04	; 4
     6b6:	8c 93       	st	X, r24
     6b8:	80 81       	ld	r24, Z
     6ba:	8f 7d       	andi	r24, 0xDF	; 223
     6bc:	80 83       	st	Z, r24
     6be:	da 01       	movw	r26, r20
     6c0:	8c 91       	ld	r24, X
     6c2:	8e 7f       	andi	r24, 0xFE	; 254
     6c4:	8c 93       	st	X, r24
     6c6:	80 81       	ld	r24, Z
     6c8:	8f 73       	andi	r24, 0x3F	; 63
     6ca:	80 83       	st	Z, r24
     6cc:	80 81       	ld	r24, Z
     6ce:	80 68       	ori	r24, 0x80	; 128
     6d0:	80 83       	st	Z, r24
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	cf c2       	rjmp	.+1438   	; 0xc74 <__stack+0x775>
     6d6:	f8 01       	movw	r30, r16
     6d8:	83 85       	ldd	r24, Z+11	; 0x0b
     6da:	88 23       	and	r24, r24
     6dc:	81 f1       	breq	.+96     	; 0x73e <__stack+0x23f>
     6de:	85 81       	ldd	r24, Z+5	; 0x05
     6e0:	98 2f       	mov	r25, r24
     6e2:	99 0f       	add	r25, r25
     6e4:	99 0f       	add	r25, r25
     6e6:	99 0f       	add	r25, r25
     6e8:	84 81       	ldd	r24, Z+4	; 0x04
     6ea:	82 95       	swap	r24
     6ec:	86 95       	lsr	r24
     6ee:	87 70       	andi	r24, 0x07	; 7
     6f0:	89 0f       	add	r24, r25
     6f2:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     6f6:	84 81       	ldd	r24, Z+4	; 0x04
     6f8:	98 2f       	mov	r25, r24
     6fa:	99 0f       	add	r25, r25
     6fc:	99 0f       	add	r25, r25
     6fe:	99 0f       	add	r25, r25
     700:	83 81       	ldd	r24, Z+3	; 0x03
     702:	82 95       	swap	r24
     704:	86 95       	lsr	r24
     706:	87 70       	andi	r24, 0x07	; 7
     708:	89 0f       	add	r24, r25
     70a:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     70e:	83 81       	ldd	r24, Z+3	; 0x03
     710:	98 2f       	mov	r25, r24
     712:	99 0f       	add	r25, r25
     714:	99 0f       	add	r25, r25
     716:	99 0f       	add	r25, r25
     718:	82 81       	ldd	r24, Z+2	; 0x02
     71a:	82 95       	swap	r24
     71c:	86 95       	lsr	r24
     71e:	87 70       	andi	r24, 0x07	; 7
     720:	89 0f       	add	r24, r25
     722:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     726:	82 81       	ldd	r24, Z+2	; 0x02
     728:	88 0f       	add	r24, r24
     72a:	88 0f       	add	r24, r24
     72c:	88 0f       	add	r24, r24
     72e:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     732:	ef ee       	ldi	r30, 0xEF	; 239
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	80 81       	ld	r24, Z
     738:	80 61       	ori	r24, 0x10	; 16
     73a:	80 83       	st	Z, r24
     73c:	17 c0       	rjmp	.+46     	; 0x76c <__stack+0x26d>
     73e:	93 81       	ldd	r25, Z+3	; 0x03
     740:	82 81       	ldd	r24, Z+2	; 0x02
     742:	86 95       	lsr	r24
     744:	86 95       	lsr	r24
     746:	86 95       	lsr	r24
     748:	b0 e2       	ldi	r27, 0x20	; 32
     74a:	9b 9f       	mul	r25, r27
     74c:	80 0d       	add	r24, r0
     74e:	11 24       	eor	r1, r1
     750:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     754:	f8 01       	movw	r30, r16
     756:	82 81       	ldd	r24, Z+2	; 0x02
     758:	82 95       	swap	r24
     75a:	88 0f       	add	r24, r24
     75c:	80 7e       	andi	r24, 0xE0	; 224
     75e:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     762:	ef ee       	ldi	r30, 0xEF	; 239
     764:	f0 e0       	ldi	r31, 0x00	; 0
     766:	80 81       	ld	r24, Z
     768:	8f 7e       	andi	r24, 0xEF	; 239
     76a:	80 83       	st	Z, r24
     76c:	8f ef       	ldi	r24, 0xFF	; 255
     76e:	9f ef       	ldi	r25, 0xFF	; 255
     770:	dc 01       	movw	r26, r24
     772:	89 83       	std	Y+1, r24	; 0x01
     774:	9a 83       	std	Y+2, r25	; 0x02
     776:	ab 83       	std	Y+3, r26	; 0x03
     778:	bc 83       	std	Y+4, r27	; 0x04
     77a:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     77e:	8b 81       	ldd	r24, Y+3	; 0x03
     780:	98 2f       	mov	r25, r24
     782:	99 0f       	add	r25, r25
     784:	99 0f       	add	r25, r25
     786:	99 0f       	add	r25, r25
     788:	8a 81       	ldd	r24, Y+2	; 0x02
     78a:	82 95       	swap	r24
     78c:	86 95       	lsr	r24
     78e:	87 70       	andi	r24, 0x07	; 7
     790:	89 0f       	add	r24, r25
     792:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     796:	8a 81       	ldd	r24, Y+2	; 0x02
     798:	98 2f       	mov	r25, r24
     79a:	99 0f       	add	r25, r25
     79c:	99 0f       	add	r25, r25
     79e:	99 0f       	add	r25, r25
     7a0:	89 81       	ldd	r24, Y+1	; 0x01
     7a2:	82 95       	swap	r24
     7a4:	86 95       	lsr	r24
     7a6:	87 70       	andi	r24, 0x07	; 7
     7a8:	89 0f       	add	r24, r25
     7aa:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     7ae:	89 81       	ldd	r24, Y+1	; 0x01
     7b0:	88 0f       	add	r24, r24
     7b2:	88 0f       	add	r24, r24
     7b4:	88 0f       	add	r24, r24
     7b6:	24 ef       	ldi	r18, 0xF4	; 244
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	d9 01       	movw	r26, r18
     7bc:	8c 93       	st	X, r24
     7be:	ef ee       	ldi	r30, 0xEF	; 239
     7c0:	f0 e0       	ldi	r31, 0x00	; 0
     7c2:	90 81       	ld	r25, Z
     7c4:	d8 01       	movw	r26, r16
     7c6:	16 96       	adiw	r26, 0x06	; 6
     7c8:	8c 91       	ld	r24, X
     7ca:	89 2b       	or	r24, r25
     7cc:	80 83       	st	Z, r24
     7ce:	d9 01       	movw	r26, r18
     7d0:	8c 91       	ld	r24, X
     7d2:	8b 7f       	andi	r24, 0xFB	; 251
     7d4:	8c 93       	st	X, r24
     7d6:	8c 91       	ld	r24, X
     7d8:	81 60       	ori	r24, 0x01	; 1
     7da:	8c 93       	st	X, r24
     7dc:	80 81       	ld	r24, Z
     7de:	8f 73       	andi	r24, 0x3F	; 63
     7e0:	80 83       	st	Z, r24
     7e2:	80 81       	ld	r24, Z
     7e4:	80 68       	ori	r24, 0x80	; 128
     7e6:	80 83       	st	Z, r24
     7e8:	80 e0       	ldi	r24, 0x00	; 0
     7ea:	44 c2       	rjmp	.+1160   	; 0xc74 <__stack+0x775>
     7ec:	f8 01       	movw	r30, r16
     7ee:	83 85       	ldd	r24, Z+11	; 0x0b
     7f0:	88 23       	and	r24, r24
     7f2:	81 f1       	breq	.+96     	; 0x854 <__stack+0x355>
     7f4:	85 81       	ldd	r24, Z+5	; 0x05
     7f6:	98 2f       	mov	r25, r24
     7f8:	99 0f       	add	r25, r25
     7fa:	99 0f       	add	r25, r25
     7fc:	99 0f       	add	r25, r25
     7fe:	84 81       	ldd	r24, Z+4	; 0x04
     800:	82 95       	swap	r24
     802:	86 95       	lsr	r24
     804:	87 70       	andi	r24, 0x07	; 7
     806:	89 0f       	add	r24, r25
     808:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     80c:	84 81       	ldd	r24, Z+4	; 0x04
     80e:	98 2f       	mov	r25, r24
     810:	99 0f       	add	r25, r25
     812:	99 0f       	add	r25, r25
     814:	99 0f       	add	r25, r25
     816:	83 81       	ldd	r24, Z+3	; 0x03
     818:	82 95       	swap	r24
     81a:	86 95       	lsr	r24
     81c:	87 70       	andi	r24, 0x07	; 7
     81e:	89 0f       	add	r24, r25
     820:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     824:	83 81       	ldd	r24, Z+3	; 0x03
     826:	98 2f       	mov	r25, r24
     828:	99 0f       	add	r25, r25
     82a:	99 0f       	add	r25, r25
     82c:	99 0f       	add	r25, r25
     82e:	82 81       	ldd	r24, Z+2	; 0x02
     830:	82 95       	swap	r24
     832:	86 95       	lsr	r24
     834:	87 70       	andi	r24, 0x07	; 7
     836:	89 0f       	add	r24, r25
     838:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     83c:	82 81       	ldd	r24, Z+2	; 0x02
     83e:	88 0f       	add	r24, r24
     840:	88 0f       	add	r24, r24
     842:	88 0f       	add	r24, r24
     844:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     848:	ef ee       	ldi	r30, 0xEF	; 239
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	80 81       	ld	r24, Z
     84e:	80 61       	ori	r24, 0x10	; 16
     850:	80 83       	st	Z, r24
     852:	17 c0       	rjmp	.+46     	; 0x882 <__stack+0x383>
     854:	93 81       	ldd	r25, Z+3	; 0x03
     856:	82 81       	ldd	r24, Z+2	; 0x02
     858:	86 95       	lsr	r24
     85a:	86 95       	lsr	r24
     85c:	86 95       	lsr	r24
     85e:	b0 e2       	ldi	r27, 0x20	; 32
     860:	9b 9f       	mul	r25, r27
     862:	80 0d       	add	r24, r0
     864:	11 24       	eor	r1, r1
     866:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     86a:	f8 01       	movw	r30, r16
     86c:	82 81       	ldd	r24, Z+2	; 0x02
     86e:	82 95       	swap	r24
     870:	88 0f       	add	r24, r24
     872:	80 7e       	andi	r24, 0xE0	; 224
     874:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     878:	ef ee       	ldi	r30, 0xEF	; 239
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	80 81       	ld	r24, Z
     87e:	8f 7e       	andi	r24, 0xEF	; 239
     880:	80 83       	st	Z, r24
     882:	8f ef       	ldi	r24, 0xFF	; 255
     884:	9f ef       	ldi	r25, 0xFF	; 255
     886:	dc 01       	movw	r26, r24
     888:	89 83       	std	Y+1, r24	; 0x01
     88a:	9a 83       	std	Y+2, r25	; 0x02
     88c:	ab 83       	std	Y+3, r26	; 0x03
     88e:	bc 83       	std	Y+4, r27	; 0x04
     890:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     894:	8b 81       	ldd	r24, Y+3	; 0x03
     896:	98 2f       	mov	r25, r24
     898:	99 0f       	add	r25, r25
     89a:	99 0f       	add	r25, r25
     89c:	99 0f       	add	r25, r25
     89e:	8a 81       	ldd	r24, Y+2	; 0x02
     8a0:	82 95       	swap	r24
     8a2:	86 95       	lsr	r24
     8a4:	87 70       	andi	r24, 0x07	; 7
     8a6:	89 0f       	add	r24, r25
     8a8:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     8ac:	8a 81       	ldd	r24, Y+2	; 0x02
     8ae:	98 2f       	mov	r25, r24
     8b0:	99 0f       	add	r25, r25
     8b2:	99 0f       	add	r25, r25
     8b4:	99 0f       	add	r25, r25
     8b6:	89 81       	ldd	r24, Y+1	; 0x01
     8b8:	82 95       	swap	r24
     8ba:	86 95       	lsr	r24
     8bc:	87 70       	andi	r24, 0x07	; 7
     8be:	89 0f       	add	r24, r25
     8c0:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     8c4:	89 81       	ldd	r24, Y+1	; 0x01
     8c6:	88 0f       	add	r24, r24
     8c8:	88 0f       	add	r24, r24
     8ca:	88 0f       	add	r24, r24
     8cc:	44 ef       	ldi	r20, 0xF4	; 244
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	da 01       	movw	r26, r20
     8d2:	8c 93       	st	X, r24
     8d4:	ef ee       	ldi	r30, 0xEF	; 239
     8d6:	f0 e0       	ldi	r31, 0x00	; 0
     8d8:	90 81       	ld	r25, Z
     8da:	d8 01       	movw	r26, r16
     8dc:	16 96       	adiw	r26, 0x06	; 6
     8de:	8c 91       	ld	r24, X
     8e0:	16 97       	sbiw	r26, 0x06	; 6
     8e2:	89 2b       	or	r24, r25
     8e4:	80 83       	st	Z, r24
     8e6:	1a 96       	adiw	r26, 0x0a	; 10
     8e8:	1c 92       	st	X, r1
     8ea:	da 01       	movw	r26, r20
     8ec:	8c 91       	ld	r24, X
     8ee:	84 60       	ori	r24, 0x04	; 4
     8f0:	8c 93       	st	X, r24
     8f2:	20 ef       	ldi	r18, 0xF0	; 240
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	d9 01       	movw	r26, r18
     8f8:	8c 91       	ld	r24, X
     8fa:	8b 7f       	andi	r24, 0xFB	; 251
     8fc:	8c 93       	st	X, r24
     8fe:	da 01       	movw	r26, r20
     900:	8c 91       	ld	r24, X
     902:	81 60       	ori	r24, 0x01	; 1
     904:	8c 93       	st	X, r24
     906:	80 81       	ld	r24, Z
     908:	8f 73       	andi	r24, 0x3F	; 63
     90a:	80 83       	st	Z, r24
     90c:	80 81       	ld	r24, Z
     90e:	80 68       	ori	r24, 0x80	; 128
     910:	80 83       	st	Z, r24
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	af c1       	rjmp	.+862    	; 0xc74 <__stack+0x775>
     916:	f8 01       	movw	r30, r16
     918:	83 85       	ldd	r24, Z+11	; 0x0b
     91a:	88 23       	and	r24, r24
     91c:	81 f1       	breq	.+96     	; 0x97e <__stack+0x47f>
     91e:	85 81       	ldd	r24, Z+5	; 0x05
     920:	98 2f       	mov	r25, r24
     922:	99 0f       	add	r25, r25
     924:	99 0f       	add	r25, r25
     926:	99 0f       	add	r25, r25
     928:	84 81       	ldd	r24, Z+4	; 0x04
     92a:	82 95       	swap	r24
     92c:	86 95       	lsr	r24
     92e:	87 70       	andi	r24, 0x07	; 7
     930:	89 0f       	add	r24, r25
     932:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     936:	84 81       	ldd	r24, Z+4	; 0x04
     938:	98 2f       	mov	r25, r24
     93a:	99 0f       	add	r25, r25
     93c:	99 0f       	add	r25, r25
     93e:	99 0f       	add	r25, r25
     940:	83 81       	ldd	r24, Z+3	; 0x03
     942:	82 95       	swap	r24
     944:	86 95       	lsr	r24
     946:	87 70       	andi	r24, 0x07	; 7
     948:	89 0f       	add	r24, r25
     94a:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     94e:	83 81       	ldd	r24, Z+3	; 0x03
     950:	98 2f       	mov	r25, r24
     952:	99 0f       	add	r25, r25
     954:	99 0f       	add	r25, r25
     956:	99 0f       	add	r25, r25
     958:	82 81       	ldd	r24, Z+2	; 0x02
     95a:	82 95       	swap	r24
     95c:	86 95       	lsr	r24
     95e:	87 70       	andi	r24, 0x07	; 7
     960:	89 0f       	add	r24, r25
     962:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     966:	82 81       	ldd	r24, Z+2	; 0x02
     968:	88 0f       	add	r24, r24
     96a:	88 0f       	add	r24, r24
     96c:	88 0f       	add	r24, r24
     96e:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     972:	ef ee       	ldi	r30, 0xEF	; 239
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	80 81       	ld	r24, Z
     978:	80 61       	ori	r24, 0x10	; 16
     97a:	80 83       	st	Z, r24
     97c:	17 c0       	rjmp	.+46     	; 0x9ac <__stack+0x4ad>
     97e:	93 81       	ldd	r25, Z+3	; 0x03
     980:	82 81       	ldd	r24, Z+2	; 0x02
     982:	86 95       	lsr	r24
     984:	86 95       	lsr	r24
     986:	86 95       	lsr	r24
     988:	b0 e2       	ldi	r27, 0x20	; 32
     98a:	9b 9f       	mul	r25, r27
     98c:	80 0d       	add	r24, r0
     98e:	11 24       	eor	r1, r1
     990:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     994:	f8 01       	movw	r30, r16
     996:	82 81       	ldd	r24, Z+2	; 0x02
     998:	82 95       	swap	r24
     99a:	88 0f       	add	r24, r24
     99c:	80 7e       	andi	r24, 0xE0	; 224
     99e:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     9a2:	ef ee       	ldi	r30, 0xEF	; 239
     9a4:	f0 e0       	ldi	r31, 0x00	; 0
     9a6:	80 81       	ld	r24, Z
     9a8:	8f 7e       	andi	r24, 0xEF	; 239
     9aa:	80 83       	st	Z, r24
     9ac:	8f ef       	ldi	r24, 0xFF	; 255
     9ae:	9f ef       	ldi	r25, 0xFF	; 255
     9b0:	dc 01       	movw	r26, r24
     9b2:	89 83       	std	Y+1, r24	; 0x01
     9b4:	9a 83       	std	Y+2, r25	; 0x02
     9b6:	ab 83       	std	Y+3, r26	; 0x03
     9b8:	bc 83       	std	Y+4, r27	; 0x04
     9ba:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     9be:	8b 81       	ldd	r24, Y+3	; 0x03
     9c0:	98 2f       	mov	r25, r24
     9c2:	99 0f       	add	r25, r25
     9c4:	99 0f       	add	r25, r25
     9c6:	99 0f       	add	r25, r25
     9c8:	8a 81       	ldd	r24, Y+2	; 0x02
     9ca:	82 95       	swap	r24
     9cc:	86 95       	lsr	r24
     9ce:	87 70       	andi	r24, 0x07	; 7
     9d0:	89 0f       	add	r24, r25
     9d2:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     9d6:	8a 81       	ldd	r24, Y+2	; 0x02
     9d8:	98 2f       	mov	r25, r24
     9da:	99 0f       	add	r25, r25
     9dc:	99 0f       	add	r25, r25
     9de:	99 0f       	add	r25, r25
     9e0:	89 81       	ldd	r24, Y+1	; 0x01
     9e2:	82 95       	swap	r24
     9e4:	86 95       	lsr	r24
     9e6:	87 70       	andi	r24, 0x07	; 7
     9e8:	89 0f       	add	r24, r25
     9ea:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     9ee:	89 81       	ldd	r24, Y+1	; 0x01
     9f0:	88 0f       	add	r24, r24
     9f2:	88 0f       	add	r24, r24
     9f4:	88 0f       	add	r24, r24
     9f6:	44 ef       	ldi	r20, 0xF4	; 244
     9f8:	50 e0       	ldi	r21, 0x00	; 0
     9fa:	da 01       	movw	r26, r20
     9fc:	8c 93       	st	X, r24
     9fe:	ef ee       	ldi	r30, 0xEF	; 239
     a00:	f0 e0       	ldi	r31, 0x00	; 0
     a02:	90 81       	ld	r25, Z
     a04:	d8 01       	movw	r26, r16
     a06:	16 96       	adiw	r26, 0x06	; 6
     a08:	8c 91       	ld	r24, X
     a0a:	16 97       	sbiw	r26, 0x06	; 6
     a0c:	89 2b       	or	r24, r25
     a0e:	80 83       	st	Z, r24
     a10:	81 e0       	ldi	r24, 0x01	; 1
     a12:	1a 96       	adiw	r26, 0x0a	; 10
     a14:	8c 93       	st	X, r24
     a16:	da 01       	movw	r26, r20
     a18:	8c 91       	ld	r24, X
     a1a:	84 60       	ori	r24, 0x04	; 4
     a1c:	8c 93       	st	X, r24
     a1e:	20 ef       	ldi	r18, 0xF0	; 240
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	d9 01       	movw	r26, r18
     a24:	8c 91       	ld	r24, X
     a26:	84 60       	ori	r24, 0x04	; 4
     a28:	8c 93       	st	X, r24
     a2a:	80 81       	ld	r24, Z
     a2c:	8f 7d       	andi	r24, 0xDF	; 223
     a2e:	80 83       	st	Z, r24
     a30:	da 01       	movw	r26, r20
     a32:	8c 91       	ld	r24, X
     a34:	81 60       	ori	r24, 0x01	; 1
     a36:	8c 93       	st	X, r24
     a38:	80 81       	ld	r24, Z
     a3a:	8f 73       	andi	r24, 0x3F	; 63
     a3c:	80 83       	st	Z, r24
     a3e:	80 81       	ld	r24, Z
     a40:	80 68       	ori	r24, 0x80	; 128
     a42:	80 83       	st	Z, r24
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	16 c1       	rjmp	.+556    	; 0xc74 <__stack+0x775>
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	2a ef       	ldi	r18, 0xFA	; 250
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	d8 01       	movw	r26, r16
     a50:	17 96       	adiw	r26, 0x07	; 7
     a52:	ed 91       	ld	r30, X+
     a54:	fc 91       	ld	r31, X
     a56:	18 97       	sbiw	r26, 0x08	; 8
     a58:	e8 0f       	add	r30, r24
     a5a:	f1 1d       	adc	r31, r1
     a5c:	90 81       	ld	r25, Z
     a5e:	f9 01       	movw	r30, r18
     a60:	90 83       	st	Z, r25
     a62:	8f 5f       	subi	r24, 0xFF	; 255
     a64:	16 96       	adiw	r26, 0x06	; 6
     a66:	9c 91       	ld	r25, X
     a68:	89 17       	cp	r24, r25
     a6a:	88 f3       	brcs	.-30     	; 0xa4e <__stack+0x54f>
     a6c:	19 82       	std	Y+1, r1	; 0x01
     a6e:	1a 82       	std	Y+2, r1	; 0x02
     a70:	1b 82       	std	Y+3, r1	; 0x03
     a72:	1c 82       	std	Y+4, r1	; 0x04
     a74:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     a78:	8b 81       	ldd	r24, Y+3	; 0x03
     a7a:	98 2f       	mov	r25, r24
     a7c:	99 0f       	add	r25, r25
     a7e:	99 0f       	add	r25, r25
     a80:	99 0f       	add	r25, r25
     a82:	8a 81       	ldd	r24, Y+2	; 0x02
     a84:	82 95       	swap	r24
     a86:	86 95       	lsr	r24
     a88:	87 70       	andi	r24, 0x07	; 7
     a8a:	89 0f       	add	r24, r25
     a8c:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     a90:	8a 81       	ldd	r24, Y+2	; 0x02
     a92:	98 2f       	mov	r25, r24
     a94:	99 0f       	add	r25, r25
     a96:	99 0f       	add	r25, r25
     a98:	99 0f       	add	r25, r25
     a9a:	89 81       	ldd	r24, Y+1	; 0x01
     a9c:	82 95       	swap	r24
     a9e:	86 95       	lsr	r24
     aa0:	87 70       	andi	r24, 0x07	; 7
     aa2:	89 0f       	add	r24, r25
     aa4:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     aa8:	89 81       	ldd	r24, Y+1	; 0x01
     aaa:	88 0f       	add	r24, r24
     aac:	88 0f       	add	r24, r24
     aae:	88 0f       	add	r24, r24
     ab0:	44 ef       	ldi	r20, 0xF4	; 244
     ab2:	50 e0       	ldi	r21, 0x00	; 0
     ab4:	da 01       	movw	r26, r20
     ab6:	8c 93       	st	X, r24
     ab8:	ef ee       	ldi	r30, 0xEF	; 239
     aba:	f0 e0       	ldi	r31, 0x00	; 0
     abc:	90 81       	ld	r25, Z
     abe:	d8 01       	movw	r26, r16
     ac0:	16 96       	adiw	r26, 0x06	; 6
     ac2:	8c 91       	ld	r24, X
     ac4:	16 97       	sbiw	r26, 0x06	; 6
     ac6:	89 2b       	or	r24, r25
     ac8:	80 83       	st	Z, r24
     aca:	81 e0       	ldi	r24, 0x01	; 1
     acc:	1a 96       	adiw	r26, 0x0a	; 10
     ace:	8c 93       	st	X, r24
     ad0:	da 01       	movw	r26, r20
     ad2:	8c 91       	ld	r24, X
     ad4:	84 60       	ori	r24, 0x04	; 4
     ad6:	8c 93       	st	X, r24
     ad8:	20 ef       	ldi	r18, 0xF0	; 240
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	d9 01       	movw	r26, r18
     ade:	8c 91       	ld	r24, X
     ae0:	84 60       	ori	r24, 0x04	; 4
     ae2:	8c 93       	st	X, r24
     ae4:	80 81       	ld	r24, Z
     ae6:	80 62       	ori	r24, 0x20	; 32
     ae8:	80 83       	st	Z, r24
     aea:	da 01       	movw	r26, r20
     aec:	8c 91       	ld	r24, X
     aee:	8e 7f       	andi	r24, 0xFE	; 254
     af0:	8c 93       	st	X, r24
     af2:	80 81       	ld	r24, Z
     af4:	8f 73       	andi	r24, 0x3F	; 63
     af6:	80 83       	st	Z, r24
     af8:	80 81       	ld	r24, Z
     afa:	80 68       	ori	r24, 0x80	; 128
     afc:	80 83       	st	Z, r24
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	b9 c0       	rjmp	.+370    	; 0xc74 <__stack+0x775>
     b02:	f8 01       	movw	r30, r16
     b04:	83 85       	ldd	r24, Z+11	; 0x0b
     b06:	88 23       	and	r24, r24
     b08:	81 f1       	breq	.+96     	; 0xb6a <__stack+0x66b>
     b0a:	85 81       	ldd	r24, Z+5	; 0x05
     b0c:	98 2f       	mov	r25, r24
     b0e:	99 0f       	add	r25, r25
     b10:	99 0f       	add	r25, r25
     b12:	99 0f       	add	r25, r25
     b14:	84 81       	ldd	r24, Z+4	; 0x04
     b16:	82 95       	swap	r24
     b18:	86 95       	lsr	r24
     b1a:	87 70       	andi	r24, 0x07	; 7
     b1c:	89 0f       	add	r24, r25
     b1e:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     b22:	84 81       	ldd	r24, Z+4	; 0x04
     b24:	98 2f       	mov	r25, r24
     b26:	99 0f       	add	r25, r25
     b28:	99 0f       	add	r25, r25
     b2a:	99 0f       	add	r25, r25
     b2c:	83 81       	ldd	r24, Z+3	; 0x03
     b2e:	82 95       	swap	r24
     b30:	86 95       	lsr	r24
     b32:	87 70       	andi	r24, 0x07	; 7
     b34:	89 0f       	add	r24, r25
     b36:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     b3a:	83 81       	ldd	r24, Z+3	; 0x03
     b3c:	98 2f       	mov	r25, r24
     b3e:	99 0f       	add	r25, r25
     b40:	99 0f       	add	r25, r25
     b42:	99 0f       	add	r25, r25
     b44:	82 81       	ldd	r24, Z+2	; 0x02
     b46:	82 95       	swap	r24
     b48:	86 95       	lsr	r24
     b4a:	87 70       	andi	r24, 0x07	; 7
     b4c:	89 0f       	add	r24, r25
     b4e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     b52:	82 81       	ldd	r24, Z+2	; 0x02
     b54:	88 0f       	add	r24, r24
     b56:	88 0f       	add	r24, r24
     b58:	88 0f       	add	r24, r24
     b5a:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     b5e:	ef ee       	ldi	r30, 0xEF	; 239
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	80 81       	ld	r24, Z
     b64:	80 61       	ori	r24, 0x10	; 16
     b66:	80 83       	st	Z, r24
     b68:	17 c0       	rjmp	.+46     	; 0xb98 <__stack+0x699>
     b6a:	93 81       	ldd	r25, Z+3	; 0x03
     b6c:	82 81       	ldd	r24, Z+2	; 0x02
     b6e:	86 95       	lsr	r24
     b70:	86 95       	lsr	r24
     b72:	86 95       	lsr	r24
     b74:	b0 e2       	ldi	r27, 0x20	; 32
     b76:	9b 9f       	mul	r25, r27
     b78:	80 0d       	add	r24, r0
     b7a:	11 24       	eor	r1, r1
     b7c:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     b80:	f8 01       	movw	r30, r16
     b82:	82 81       	ldd	r24, Z+2	; 0x02
     b84:	82 95       	swap	r24
     b86:	88 0f       	add	r24, r24
     b88:	80 7e       	andi	r24, 0xE0	; 224
     b8a:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     b8e:	ef ee       	ldi	r30, 0xEF	; 239
     b90:	f0 e0       	ldi	r31, 0x00	; 0
     b92:	80 81       	ld	r24, Z
     b94:	8f 7e       	andi	r24, 0xEF	; 239
     b96:	80 83       	st	Z, r24
     b98:	d8 01       	movw	r26, r16
     b9a:	16 96       	adiw	r26, 0x06	; 6
     b9c:	8c 91       	ld	r24, X
     b9e:	88 23       	and	r24, r24
     ba0:	91 f0       	breq	.+36     	; 0xbc6 <__stack+0x6c7>
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	2a ef       	ldi	r18, 0xFA	; 250
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	d8 01       	movw	r26, r16
     baa:	17 96       	adiw	r26, 0x07	; 7
     bac:	ed 91       	ld	r30, X+
     bae:	fc 91       	ld	r31, X
     bb0:	18 97       	sbiw	r26, 0x08	; 8
     bb2:	e8 0f       	add	r30, r24
     bb4:	f1 1d       	adc	r31, r1
     bb6:	90 81       	ld	r25, Z
     bb8:	f9 01       	movw	r30, r18
     bba:	90 83       	st	Z, r25
     bbc:	8f 5f       	subi	r24, 0xFF	; 255
     bbe:	16 96       	adiw	r26, 0x06	; 6
     bc0:	9c 91       	ld	r25, X
     bc2:	89 17       	cp	r24, r25
     bc4:	88 f3       	brcs	.-30     	; 0xba8 <__stack+0x6a9>
     bc6:	8f ef       	ldi	r24, 0xFF	; 255
     bc8:	9f ef       	ldi	r25, 0xFF	; 255
     bca:	dc 01       	movw	r26, r24
     bcc:	89 83       	std	Y+1, r24	; 0x01
     bce:	9a 83       	std	Y+2, r25	; 0x02
     bd0:	ab 83       	std	Y+3, r26	; 0x03
     bd2:	bc 83       	std	Y+4, r27	; 0x04
     bd4:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     bd8:	8b 81       	ldd	r24, Y+3	; 0x03
     bda:	98 2f       	mov	r25, r24
     bdc:	99 0f       	add	r25, r25
     bde:	99 0f       	add	r25, r25
     be0:	99 0f       	add	r25, r25
     be2:	8a 81       	ldd	r24, Y+2	; 0x02
     be4:	82 95       	swap	r24
     be6:	86 95       	lsr	r24
     be8:	87 70       	andi	r24, 0x07	; 7
     bea:	89 0f       	add	r24, r25
     bec:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     bf0:	8a 81       	ldd	r24, Y+2	; 0x02
     bf2:	98 2f       	mov	r25, r24
     bf4:	99 0f       	add	r25, r25
     bf6:	99 0f       	add	r25, r25
     bf8:	99 0f       	add	r25, r25
     bfa:	89 81       	ldd	r24, Y+1	; 0x01
     bfc:	82 95       	swap	r24
     bfe:	86 95       	lsr	r24
     c00:	87 70       	andi	r24, 0x07	; 7
     c02:	89 0f       	add	r24, r25
     c04:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     c08:	89 81       	ldd	r24, Y+1	; 0x01
     c0a:	88 0f       	add	r24, r24
     c0c:	88 0f       	add	r24, r24
     c0e:	88 0f       	add	r24, r24
     c10:	44 ef       	ldi	r20, 0xF4	; 244
     c12:	50 e0       	ldi	r21, 0x00	; 0
     c14:	da 01       	movw	r26, r20
     c16:	8c 93       	st	X, r24
     c18:	ef ee       	ldi	r30, 0xEF	; 239
     c1a:	f0 e0       	ldi	r31, 0x00	; 0
     c1c:	90 81       	ld	r25, Z
     c1e:	d8 01       	movw	r26, r16
     c20:	16 96       	adiw	r26, 0x06	; 6
     c22:	8c 91       	ld	r24, X
     c24:	16 97       	sbiw	r26, 0x06	; 6
     c26:	89 2b       	or	r24, r25
     c28:	80 83       	st	Z, r24
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	1a 96       	adiw	r26, 0x0a	; 10
     c2e:	8c 93       	st	X, r24
     c30:	da 01       	movw	r26, r20
     c32:	8c 91       	ld	r24, X
     c34:	84 60       	ori	r24, 0x04	; 4
     c36:	8c 93       	st	X, r24
     c38:	20 ef       	ldi	r18, 0xF0	; 240
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	d9 01       	movw	r26, r18
     c3e:	8c 91       	ld	r24, X
     c40:	84 60       	ori	r24, 0x04	; 4
     c42:	8c 93       	st	X, r24
     c44:	80 81       	ld	r24, Z
     c46:	80 62       	ori	r24, 0x20	; 32
     c48:	80 83       	st	Z, r24
     c4a:	da 01       	movw	r26, r20
     c4c:	8c 91       	ld	r24, X
     c4e:	81 60       	ori	r24, 0x01	; 1
     c50:	8c 93       	st	X, r24
     c52:	80 81       	ld	r24, Z
     c54:	8f 73       	andi	r24, 0x3F	; 63
     c56:	80 83       	st	Z, r24
     c58:	80 81       	ld	r24, Z
     c5a:	80 68       	ori	r24, 0x80	; 128
     c5c:	80 83       	st	Z, r24
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	09 c0       	rjmp	.+18     	; 0xc74 <__stack+0x775>
     c62:	f8 01       	movw	r30, r16
     c64:	11 86       	std	Z+9, r1	; 0x09
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	05 c0       	rjmp	.+10     	; 0xc74 <__stack+0x775>
     c6a:	8f e1       	ldi	r24, 0x1F	; 31
     c6c:	d8 01       	movw	r26, r16
     c6e:	19 96       	adiw	r26, 0x09	; 9
     c70:	8c 93       	st	X, r24
     c72:	8f ef       	ldi	r24, 0xFF	; 255
     c74:	0f 90       	pop	r0
     c76:	0f 90       	pop	r0
     c78:	0f 90       	pop	r0
     c7a:	0f 90       	pop	r0
     c7c:	df 91       	pop	r29
     c7e:	cf 91       	pop	r28
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	08 95       	ret

00000c86 <can_get_status>:
     c86:	1f 93       	push	r17
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	fc 01       	movw	r30, r24
     c8e:	91 85       	ldd	r25, Z+9	; 0x09
     c90:	99 23       	and	r25, r25
     c92:	09 f4       	brne	.+2      	; 0xc96 <can_get_status+0x10>
     c94:	8b c0       	rjmp	.+278    	; 0xdac <can_get_status+0x126>
     c96:	9f 31       	cpi	r25, 0x1F	; 31
     c98:	09 f4       	brne	.+2      	; 0xc9c <can_get_status+0x16>
     c9a:	8a c0       	rjmp	.+276    	; 0xdb0 <can_get_status+0x12a>
     c9c:	9f 3f       	cpi	r25, 0xFF	; 255
     c9e:	09 f4       	brne	.+2      	; 0xca2 <can_get_status+0x1c>
     ca0:	89 c0       	rjmp	.+274    	; 0xdb4 <can_get_status+0x12e>
     ca2:	ef 01       	movw	r28, r30
     ca4:	80 81       	ld	r24, Z
     ca6:	82 95       	swap	r24
     ca8:	80 7f       	andi	r24, 0xF0	; 240
     caa:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     cae:	3f da       	rcall	.-2946   	; 0x12e <can_get_mob_status>
     cb0:	18 2f       	mov	r17, r24
     cb2:	80 32       	cpi	r24, 0x20	; 32
     cb4:	59 f0       	breq	.+22     	; 0xccc <can_get_status+0x46>
     cb6:	20 f4       	brcc	.+8      	; 0xcc0 <can_get_status+0x3a>
     cb8:	88 23       	and	r24, r24
     cba:	09 f4       	brne	.+2      	; 0xcbe <can_get_status+0x38>
     cbc:	7d c0       	rjmp	.+250    	; 0xdb8 <can_get_status+0x132>
     cbe:	6c c0       	rjmp	.+216    	; 0xd98 <can_get_status+0x112>
     cc0:	80 34       	cpi	r24, 0x40	; 64
     cc2:	09 f4       	brne	.+2      	; 0xcc6 <can_get_status+0x40>
     cc4:	5e c0       	rjmp	.+188    	; 0xd82 <can_get_status+0xfc>
     cc6:	80 3a       	cpi	r24, 0xA0	; 160
     cc8:	09 f0       	breq	.+2      	; 0xccc <can_get_status+0x46>
     cca:	66 c0       	rjmp	.+204    	; 0xd98 <can_get_status+0x112>
     ccc:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     cd0:	8f 70       	andi	r24, 0x0F	; 15
     cd2:	8e 83       	std	Y+6, r24	; 0x06
     cd4:	8f 81       	ldd	r24, Y+7	; 0x07
     cd6:	98 85       	ldd	r25, Y+8	; 0x08
     cd8:	42 da       	rcall	.-2940   	; 0x15e <can_get_data>
     cda:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	92 ff       	sbrs	r25, 2
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	8a 87       	std	Y+10, r24	; 0x0a
     ce6:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     cea:	84 ff       	sbrs	r24, 4
     cec:	2d c0       	rjmp	.+90     	; 0xd48 <can_get_status+0xc2>
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	8b 87       	std	Y+11, r24	; 0x0b
     cf2:	e3 ef       	ldi	r30, 0xF3	; 243
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	80 81       	ld	r24, Z
     cf8:	86 95       	lsr	r24
     cfa:	86 95       	lsr	r24
     cfc:	86 95       	lsr	r24
     cfe:	8d 83       	std	Y+5, r24	; 0x05
     d00:	a2 ef       	ldi	r26, 0xF2	; 242
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	8c 91       	ld	r24, X
     d06:	90 81       	ld	r25, Z
     d08:	86 95       	lsr	r24
     d0a:	86 95       	lsr	r24
     d0c:	86 95       	lsr	r24
     d0e:	20 e2       	ldi	r18, 0x20	; 32
     d10:	92 9f       	mul	r25, r18
     d12:	80 0d       	add	r24, r0
     d14:	11 24       	eor	r1, r1
     d16:	8c 83       	std	Y+4, r24	; 0x04
     d18:	e1 ef       	ldi	r30, 0xF1	; 241
     d1a:	f0 e0       	ldi	r31, 0x00	; 0
     d1c:	80 81       	ld	r24, Z
     d1e:	9c 91       	ld	r25, X
     d20:	86 95       	lsr	r24
     d22:	86 95       	lsr	r24
     d24:	86 95       	lsr	r24
     d26:	20 e2       	ldi	r18, 0x20	; 32
     d28:	92 9f       	mul	r25, r18
     d2a:	80 0d       	add	r24, r0
     d2c:	11 24       	eor	r1, r1
     d2e:	8b 83       	std	Y+3, r24	; 0x03
     d30:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     d34:	90 81       	ld	r25, Z
     d36:	86 95       	lsr	r24
     d38:	86 95       	lsr	r24
     d3a:	86 95       	lsr	r24
     d3c:	20 e2       	ldi	r18, 0x20	; 32
     d3e:	92 9f       	mul	r25, r18
     d40:	80 0d       	add	r24, r0
     d42:	11 24       	eor	r1, r1
     d44:	8a 83       	std	Y+2, r24	; 0x02
     d46:	13 c0       	rjmp	.+38     	; 0xd6e <can_get_status+0xe8>
     d48:	1b 86       	std	Y+11, r1	; 0x0b
     d4a:	e3 ef       	ldi	r30, 0xF3	; 243
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	82 95       	swap	r24
     d52:	86 95       	lsr	r24
     d54:	87 70       	andi	r24, 0x07	; 7
     d56:	8b 83       	std	Y+3, r24	; 0x03
     d58:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     d5c:	80 81       	ld	r24, Z
     d5e:	92 95       	swap	r25
     d60:	96 95       	lsr	r25
     d62:	97 70       	andi	r25, 0x07	; 7
     d64:	88 0f       	add	r24, r24
     d66:	88 0f       	add	r24, r24
     d68:	88 0f       	add	r24, r24
     d6a:	89 0f       	add	r24, r25
     d6c:	8a 83       	std	Y+2, r24	; 0x02
     d6e:	19 87       	std	Y+9, r17	; 0x09
     d70:	ef ee       	ldi	r30, 0xEF	; 239
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	8f 73       	andi	r24, 0x3F	; 63
     d78:	80 83       	st	Z, r24
     d7a:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	1c c0       	rjmp	.+56     	; 0xdba <can_get_status+0x134>
     d82:	80 e4       	ldi	r24, 0x40	; 64
     d84:	89 87       	std	Y+9, r24	; 0x09
     d86:	ef ee       	ldi	r30, 0xEF	; 239
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	80 81       	ld	r24, Z
     d8c:	8f 73       	andi	r24, 0x3F	; 63
     d8e:	80 83       	st	Z, r24
     d90:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     d94:	80 e0       	ldi	r24, 0x00	; 0
     d96:	11 c0       	rjmp	.+34     	; 0xdba <can_get_status+0x134>
     d98:	19 87       	std	Y+9, r17	; 0x09
     d9a:	ef ee       	ldi	r30, 0xEF	; 239
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	8f 73       	andi	r24, 0x3F	; 63
     da2:	80 83       	st	Z, r24
     da4:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     da8:	82 e0       	ldi	r24, 0x02	; 2
     daa:	07 c0       	rjmp	.+14     	; 0xdba <can_get_status+0x134>
     dac:	82 e0       	ldi	r24, 0x02	; 2
     dae:	05 c0       	rjmp	.+10     	; 0xdba <can_get_status+0x134>
     db0:	82 e0       	ldi	r24, 0x02	; 2
     db2:	03 c0       	rjmp	.+6      	; 0xdba <can_get_status+0x134>
     db4:	82 e0       	ldi	r24, 0x02	; 2
     db6:	01 c0       	rjmp	.+2      	; 0xdba <can_get_status+0x134>
     db8:	81 e0       	ldi	r24, 0x01	; 1
     dba:	df 91       	pop	r29
     dbc:	cf 91       	pop	r28
     dbe:	1f 91       	pop	r17
     dc0:	08 95       	ret

00000dc2 <main>:
uint8_t can_buffer_txx[CAN_BUFFER_SIZE];


int main(void)
{
	uart_init(9600);
     dc2:	80 e8       	ldi	r24, 0x80	; 128
     dc4:	95 e2       	ldi	r25, 0x25	; 37
     dc6:	5d d1       	rcall	.+698    	; 0x1082 <uart_init>
	
	//fdevopen(&uart_putc, NULL);
	//fdevopen((int (*)(char,  struct __file *))&uart_getc, NULL);
	
	fdevopen(&uart_putc, &uart_getc);
     dc8:	64 e8       	ldi	r22, 0x84	; 132
     dca:	78 e0       	ldi	r23, 0x08	; 8
     dcc:	8b e6       	ldi	r24, 0x6B	; 107
     dce:	98 e0       	ldi	r25, 0x08	; 8
	can_init(0);
     dd0:	ea d1       	rcall	.+980    	; 0x11a6 <fdevopen>
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	ef d9       	rcall	.-3106   	; 0x1b4 <can_init>
	CANGIE |= (1 << ENIT);
     dd6:	eb ed       	ldi	r30, 0xDB	; 219
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	80 81       	ld	r24, Z
     ddc:	80 68       	ori	r24, 0x80	; 128
     dde:	80 83       	st	Z, r24
	sei();
     de0:	78 94       	sei
	
	can_buffer_rx[0] = 0x00; //Byte 0
     de2:	e0 e6       	ldi	r30, 0x60	; 96
     de4:	f2 e0       	ldi	r31, 0x02	; 2
     de6:	10 82       	st	Z, r1
	can_buffer_rx[1] = 0x00; //Software throttle
     de8:	11 82       	std	Z+1, r1	; 0x01
	can_buffer_rx[2] = 0x00;
     dea:	12 82       	std	Z+2, r1	; 0x02
	can_buffer_rx[3] = 0x00;
     dec:	13 82       	std	Z+3, r1	; 0x03
	can_buffer_rx[4] = 0x00;
     dee:	14 82       	std	Z+4, r1	; 0x04
	can_buffer_rx[5] = 0x00;
     df0:	15 82       	std	Z+5, r1	; 0x05
	can_buffer_rx[6] = 0x00;
     df2:	16 82       	std	Z+6, r1	; 0x06
	can_buffer_rx[7] = 0x00;
     df4:	17 82       	std	Z+7, r1	; 0x07
	rx_rtr.id.std = CAN_ID+1;
	rx_rtr.cmd = CMD_RX_REMOTE_MASKED;
	*/
	
	// RX Setup
	rx_msg_one.pt_data = &can_buffer_rxx[0];
     df6:	ac e7       	ldi	r26, 0x7C	; 124
     df8:	b2 e0       	ldi	r27, 0x02	; 2
     dfa:	88 e5       	ldi	r24, 0x58	; 88
     dfc:	92 e0       	ldi	r25, 0x02	; 2
     dfe:	18 96       	adiw	r26, 0x08	; 8
     e00:	9c 93       	st	X, r25
     e02:	8e 93       	st	-X, r24
     e04:	17 97       	sbiw	r26, 0x07	; 7
	rx_msg_one.ctrl.ide = 0;
     e06:	1b 96       	adiw	r26, 0x0b	; 11
     e08:	1c 92       	st	X, r1
     e0a:	1b 97       	sbiw	r26, 0x0b	; 11
	rx_msg_one.dlc = CAN_BUFFER_SIZE;
     e0c:	98 e0       	ldi	r25, 0x08	; 8
     e0e:	16 96       	adiw	r26, 0x06	; 6
     e10:	9c 93       	st	X, r25
     e12:	16 97       	sbiw	r26, 0x06	; 6
	rx_msg_one.id.std = CAN_ID;
     e14:	20 e8       	ldi	r18, 0x80	; 128
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	13 96       	adiw	r26, 0x03	; 3
     e1a:	3c 93       	st	X, r19
     e1c:	2e 93       	st	-X, r18
     e1e:	12 97       	sbiw	r26, 0x02	; 2
	rx_msg_one.cmd = CMD_RX_MASKED;	
     e20:	87 e0       	ldi	r24, 0x07	; 7
     e22:	11 96       	adiw	r26, 0x01	; 1
     e24:	8c 93       	st	X, r24
			
	rx_msg_two.pt_data = &can_buffer_rx[0];
     e26:	a8 e8       	ldi	r26, 0x88	; 136
     e28:	b2 e0       	ldi	r27, 0x02	; 2
     e2a:	18 96       	adiw	r26, 0x08	; 8
     e2c:	fc 93       	st	X, r31
     e2e:	ee 93       	st	-X, r30
     e30:	17 97       	sbiw	r26, 0x07	; 7
	rx_msg_two.ctrl.ide = 0;
     e32:	1b 96       	adiw	r26, 0x0b	; 11
     e34:	1c 92       	st	X, r1
     e36:	1b 97       	sbiw	r26, 0x0b	; 11
	rx_msg_two.dlc = CAN_BUFFER_SIZE;
     e38:	16 96       	adiw	r26, 0x06	; 6
     e3a:	9c 93       	st	X, r25
     e3c:	16 97       	sbiw	r26, 0x06	; 6
	rx_msg_two.id.std = CAN_ID;
     e3e:	13 96       	adiw	r26, 0x03	; 3
     e40:	3c 93       	st	X, r19
     e42:	2e 93       	st	-X, r18
     e44:	12 97       	sbiw	r26, 0x02	; 2
	rx_msg_two.cmd = CMD_RX_MASKED;
     e46:	11 96       	adiw	r26, 0x01	; 1
     e48:	8c 93       	st	X, r24
	char buffer[128];
	int i = 0;
	uint8_t curr;	
	
	int tx_count = 0;
	int rx_count = 0;
     e4a:	c1 2c       	mov	r12, r1
     e4c:	d1 2c       	mov	r13, r1
		
		
		// TX Setup
		
		// point message object to first element of data buffer
		tx_msg_two.pt_data = &can_buffer_txx[0];
     e4e:	0f 2e       	mov	r0, r31
     e50:	f4 e9       	ldi	r31, 0x94	; 148
     e52:	ef 2e       	mov	r14, r31
     e54:	f2 e0       	ldi	r31, 0x02	; 2
     e56:	ff 2e       	mov	r15, r31
     e58:	f0 2d       	mov	r31, r0
     e5a:	0f 2e       	mov	r0, r31
     e5c:	f8 e6       	ldi	r31, 0x68	; 104
     e5e:	af 2e       	mov	r10, r31
     e60:	f2 e0       	ldi	r31, 0x02	; 2
     e62:	bf 2e       	mov	r11, r31
     e64:	f0 2d       	mov	r31, r0
		// standard CAN frame type (2.0A)
		tx_msg_two.ctrl.ide = 0;
		// Number of bytes being sent (8 max)
		tx_msg_two.dlc = CAN_BUFFER_SIZE;
		// populate ID field with ID Tag
		tx_msg_two.id.std = CAN_ID;
     e66:	68 94       	set
     e68:	66 24       	eor	r6, r6
     e6a:	67 f8       	bld	r6, 7
     e6c:	71 2c       	mov	r7, r1
		// assign this as a "Standard (2.0A) Reply" message object
		tx_msg_two.cmd = CMD_TX_DATA;	
		
		printf("\n Waiting... ");
     e6e:	0f 2e       	mov	r0, r31
     e70:	fc e0       	ldi	r31, 0x0C	; 12
     e72:	4f 2e       	mov	r4, r31
     e74:	f2 e0       	ldi	r31, 0x02	; 2
     e76:	5f 2e       	mov	r5, r31
     e78:	f0 2d       	mov	r31, r0
		
		while(can_cmd(&rx_msg_two) != CAN_CMD_ACCEPTED);
		while(can_get_status(&rx_msg_two) == CAN_STATUS_NOT_COMPLETED);
				
		rx_count++;
		printf("SOMETHING CAME IN. Packet ");
     e7a:	0f 2e       	mov	r0, r31
     e7c:	fa e1       	ldi	r31, 0x1A	; 26
     e7e:	2f 2e       	mov	r2, r31
     e80:	f2 e0       	ldi	r31, 0x02	; 2
     e82:	3f 2e       	mov	r3, r31
     e84:	f0 2d       	mov	r31, r0
     e86:	08 e6       	ldi	r16, 0x68	; 104
     e88:	12 e0       	ldi	r17, 0x02	; 2
		printf("%d\n",rx_count);		
		
		printf("\nChars received: ");
		for (int k = 0; k < 8; k++){			
			printf("%c ", can_buffer_rx[k]);			
     e8a:	0f 2e       	mov	r0, r31
     e8c:	fb e4       	ldi	r31, 0x4B	; 75
     e8e:	8f 2e       	mov	r8, r31
     e90:	f2 e0       	ldi	r31, 0x02	; 2
     e92:	9f 2e       	mov	r9, r31
     e94:	f0 2d       	mov	r31, r0
		
		
		// TX Setup
		
		// point message object to first element of data buffer
		tx_msg_two.pt_data = &can_buffer_txx[0];
     e96:	f7 01       	movw	r30, r14
     e98:	b0 86       	std	Z+8, r11	; 0x08
     e9a:	a7 82       	std	Z+7, r10	; 0x07
		// standard CAN frame type (2.0A)
		tx_msg_two.ctrl.ide = 0;
     e9c:	13 86       	std	Z+11, r1	; 0x0b
		// Number of bytes being sent (8 max)
		tx_msg_two.dlc = CAN_BUFFER_SIZE;
     e9e:	28 e0       	ldi	r18, 0x08	; 8
     ea0:	26 83       	std	Z+6, r18	; 0x06
		// populate ID field with ID Tag
		tx_msg_two.id.std = CAN_ID;
     ea2:	73 82       	std	Z+3, r7	; 0x03
     ea4:	62 82       	std	Z+2, r6	; 0x02
		// assign this as a "Standard (2.0A) Reply" message object
		tx_msg_two.cmd = CMD_TX_DATA;	
     ea6:	82 e0       	ldi	r24, 0x02	; 2
		
		printf("\n Waiting... ");
     ea8:	81 83       	std	Z+1, r24	; 0x01
     eaa:	5f 92       	push	r5
     eac:	4f 92       	push	r4
		
		while(can_cmd(&rx_msg_two) != CAN_CMD_ACCEPTED);
     eae:	c5 d1       	rcall	.+906    	; 0x123a <printf>
     eb0:	0f 90       	pop	r0
     eb2:	0f 90       	pop	r0
     eb4:	88 e8       	ldi	r24, 0x88	; 136
     eb6:	92 e0       	ldi	r25, 0x02	; 2
     eb8:	88 d9       	rcall	.-3312   	; 0x1ca <can_cmd>
		while(can_get_status(&rx_msg_two) == CAN_STATUS_NOT_COMPLETED);
     eba:	81 11       	cpse	r24, r1
     ebc:	fb cf       	rjmp	.-10     	; 0xeb4 <main+0xf2>
     ebe:	88 e8       	ldi	r24, 0x88	; 136
     ec0:	92 e0       	ldi	r25, 0x02	; 2
     ec2:	e1 de       	rcall	.-574    	; 0xc86 <can_get_status>
				
		rx_count++;
     ec4:	81 30       	cpi	r24, 0x01	; 1
     ec6:	d9 f3       	breq	.-10     	; 0xebe <main+0xfc>
     ec8:	9f ef       	ldi	r25, 0xFF	; 255
		printf("SOMETHING CAME IN. Packet ");
     eca:	c9 1a       	sub	r12, r25
     ecc:	d9 0a       	sbc	r13, r25
     ece:	3f 92       	push	r3
		printf("%d\n",rx_count);		
     ed0:	2f 92       	push	r2
     ed2:	b3 d1       	rcall	.+870    	; 0x123a <printf>
     ed4:	df 92       	push	r13
     ed6:	cf 92       	push	r12
     ed8:	e5 e3       	ldi	r30, 0x35	; 53
     eda:	f2 e0       	ldi	r31, 0x02	; 2
     edc:	ff 93       	push	r31
		
		printf("\nChars received: ");
     ede:	ef 93       	push	r30
     ee0:	ac d1       	rcall	.+856    	; 0x123a <printf>
     ee2:	89 e3       	ldi	r24, 0x39	; 57
     ee4:	92 e0       	ldi	r25, 0x02	; 2
     ee6:	9f 93       	push	r25
     ee8:	8f 93       	push	r24
     eea:	a7 d1       	rcall	.+846    	; 0x123a <printf>
     eec:	c0 e6       	ldi	r28, 0x60	; 96
     eee:	d2 e0       	ldi	r29, 0x02	; 2
     ef0:	8d b7       	in	r24, 0x3d	; 61
     ef2:	9e b7       	in	r25, 0x3e	; 62
     ef4:	08 96       	adiw	r24, 0x08	; 8
     ef6:	0f b6       	in	r0, 0x3f	; 63
     ef8:	f8 94       	cli
     efa:	9e bf       	out	0x3e, r25	; 62
		for (int k = 0; k < 8; k++){			
			printf("%c ", can_buffer_rx[k]);			
     efc:	0f be       	out	0x3f, r0	; 63
     efe:	8d bf       	out	0x3d, r24	; 61
     f00:	89 91       	ld	r24, Y+
     f02:	1f 92       	push	r1
     f04:	8f 93       	push	r24
     f06:	9f 92       	push	r9
     f08:	8f 92       	push	r8
		rx_count++;
		printf("SOMETHING CAME IN. Packet ");
		printf("%d\n",rx_count);		
		
		printf("\nChars received: ");
		for (int k = 0; k < 8; k++){			
     f0a:	97 d1       	rcall	.+814    	; 0x123a <printf>
     f0c:	0f 90       	pop	r0
     f0e:	0f 90       	pop	r0
     f10:	0f 90       	pop	r0
     f12:	0f 90       	pop	r0
     f14:	c0 17       	cp	r28, r16
     f16:	d1 07       	cpc	r29, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f18:	99 f7       	brne	.-26     	; 0xf00 <main+0x13e>
     f1a:	9f ef       	ldi	r25, 0xFF	; 255
     f1c:	e3 e2       	ldi	r30, 0x23	; 35
     f1e:	f4 ef       	ldi	r31, 0xF4	; 244
     f20:	91 50       	subi	r25, 0x01	; 1
     f22:	e0 40       	sbci	r30, 0x00	; 0
     f24:	f0 40       	sbci	r31, 0x00	; 0
     f26:	e1 f7       	brne	.-8      	; 0xf20 <main+0x15e>
     f28:	00 c0       	rjmp	.+0      	; 0xf2a <main+0x168>
     f2a:	00 00       	nop
     f2c:	b4 cf       	rjmp	.-152    	; 0xe96 <main+0xd4>

00000f2e <buffer_write>:
	str[i] = '\0';
}

bool buffer_full(struct ringbuffer* buffer) {
	return ((buffer->head == buffer->tail) && !(buffer->empty));
}
     f2e:	fc 01       	movw	r30, r24
     f30:	ee 57       	subi	r30, 0x7E	; 126
     f32:	ff 4f       	sbci	r31, 0xFF	; 255
     f34:	20 81       	ld	r18, Z
     f36:	22 23       	and	r18, r18
     f38:	11 f0       	breq	.+4      	; 0xf3e <buffer_write+0x10>
     f3a:	10 82       	st	Z, r1
     f3c:	16 c0       	rjmp	.+44     	; 0xf6a <buffer_write+0x3c>
     f3e:	fc 01       	movw	r30, r24
     f40:	e0 58       	subi	r30, 0x80	; 128
     f42:	ff 4f       	sbci	r31, 0xFF	; 255
     f44:	20 81       	ld	r18, Z
     f46:	31 96       	adiw	r30, 0x01	; 1
     f48:	30 81       	ld	r19, Z
     f4a:	23 13       	cpse	r18, r19
     f4c:	0e c0       	rjmp	.+28     	; 0xf6a <buffer_write+0x3c>
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	2f 5f       	subi	r18, 0xFF	; 255
     f52:	3f 4f       	sbci	r19, 0xFF	; 255
     f54:	2f 77       	andi	r18, 0x7F	; 127
     f56:	30 78       	andi	r19, 0x80	; 128
     f58:	33 23       	and	r19, r19
     f5a:	34 f4       	brge	.+12     	; 0xf68 <buffer_write+0x3a>
     f5c:	21 50       	subi	r18, 0x01	; 1
     f5e:	31 09       	sbc	r19, r1
     f60:	20 68       	ori	r18, 0x80	; 128
     f62:	3f 6f       	ori	r19, 0xFF	; 255
     f64:	2f 5f       	subi	r18, 0xFF	; 255
     f66:	3f 4f       	sbci	r19, 0xFF	; 255
     f68:	20 83       	st	Z, r18
     f6a:	fc 01       	movw	r30, r24
     f6c:	e0 58       	subi	r30, 0x80	; 128
     f6e:	ff 4f       	sbci	r31, 0xFF	; 255
     f70:	20 81       	ld	r18, Z
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	dc 01       	movw	r26, r24
     f76:	a2 0f       	add	r26, r18
     f78:	b3 1f       	adc	r27, r19
     f7a:	6c 93       	st	X, r22
     f7c:	c9 01       	movw	r24, r18
     f7e:	01 96       	adiw	r24, 0x01	; 1
     f80:	8f 77       	andi	r24, 0x7F	; 127
     f82:	90 78       	andi	r25, 0x80	; 128
     f84:	99 23       	and	r25, r25
     f86:	24 f4       	brge	.+8      	; 0xf90 <buffer_write+0x62>
     f88:	01 97       	sbiw	r24, 0x01	; 1
     f8a:	80 68       	ori	r24, 0x80	; 128
     f8c:	9f 6f       	ori	r25, 0xFF	; 255
     f8e:	01 96       	adiw	r24, 0x01	; 1
     f90:	80 83       	st	Z, r24
     f92:	08 95       	ret

00000f94 <buffer_read>:
     f94:	fc 01       	movw	r30, r24
     f96:	ee 57       	subi	r30, 0x7E	; 126
     f98:	ff 4f       	sbci	r31, 0xFF	; 255
     f9a:	20 81       	ld	r18, Z
     f9c:	21 11       	cpse	r18, r1
     f9e:	22 c0       	rjmp	.+68     	; 0xfe4 <buffer_read+0x50>
     fa0:	31 97       	sbiw	r30, 0x01	; 1
     fa2:	20 81       	ld	r18, Z
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	fc 01       	movw	r30, r24
     fa8:	e2 0f       	add	r30, r18
     faa:	f3 1f       	adc	r31, r19
     fac:	40 81       	ld	r20, Z
     fae:	2f 5f       	subi	r18, 0xFF	; 255
     fb0:	3f 4f       	sbci	r19, 0xFF	; 255
     fb2:	2f 77       	andi	r18, 0x7F	; 127
     fb4:	30 78       	andi	r19, 0x80	; 128
     fb6:	33 23       	and	r19, r19
     fb8:	34 f4       	brge	.+12     	; 0xfc6 <buffer_read+0x32>
     fba:	21 50       	subi	r18, 0x01	; 1
     fbc:	31 09       	sbc	r19, r1
     fbe:	20 68       	ori	r18, 0x80	; 128
     fc0:	3f 6f       	ori	r19, 0xFF	; 255
     fc2:	2f 5f       	subi	r18, 0xFF	; 255
     fc4:	3f 4f       	sbci	r19, 0xFF	; 255
     fc6:	fc 01       	movw	r30, r24
     fc8:	ef 57       	subi	r30, 0x7F	; 127
     fca:	ff 4f       	sbci	r31, 0xFF	; 255
     fcc:	20 83       	st	Z, r18
     fce:	dc 01       	movw	r26, r24
     fd0:	ae 57       	subi	r26, 0x7E	; 126
     fd2:	bf 4f       	sbci	r27, 0xFF	; 255
     fd4:	31 97       	sbiw	r30, 0x01	; 1
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	90 81       	ld	r25, Z
     fda:	92 13       	cpse	r25, r18
     fdc:	80 e0       	ldi	r24, 0x00	; 0
     fde:	8c 93       	st	X, r24
     fe0:	84 2f       	mov	r24, r20
     fe2:	08 95       	ret
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	08 95       	ret

00000fe8 <buffer_empty>:


bool buffer_empty(struct ringbuffer* buffer) {
	return buffer->empty;
     fe8:	8e 57       	subi	r24, 0x7E	; 126
     fea:	9f 4f       	sbci	r25, 0xFF	; 255
}
     fec:	fc 01       	movw	r30, r24
     fee:	80 81       	ld	r24, Z
     ff0:	08 95       	ret

00000ff2 <__vector_20>:

volatile struct ringbuffer tx_buffer = {{0}, 0, 0, true};
volatile struct ringbuffer rx_buffer = {{0}, 0, 0, true};

//AVR UART Interrupt (Receive and Transmit)
ISR(LIN_TC_vect) {
     ff2:	1f 92       	push	r1
     ff4:	0f 92       	push	r0
     ff6:	0f b6       	in	r0, 0x3f	; 63
     ff8:	0f 92       	push	r0
     ffa:	11 24       	eor	r1, r1
     ffc:	2f 93       	push	r18
     ffe:	3f 93       	push	r19
    1000:	4f 93       	push	r20
    1002:	5f 93       	push	r21
    1004:	6f 93       	push	r22
    1006:	7f 93       	push	r23
    1008:	8f 93       	push	r24
    100a:	9f 93       	push	r25
    100c:	af 93       	push	r26
    100e:	bf 93       	push	r27
    1010:	ef 93       	push	r30
    1012:	ff 93       	push	r31
	
	// A byte has been received by the UART
	if(LINSIR & (1 << LRXOK)) {
    1014:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    1018:	80 ff       	sbrs	r24, 0
    101a:	0a c0       	rjmp	.+20     	; 0x1030 <__vector_20+0x3e>
		//clear LRXOK
		LINSIR &= ~(1 << LRXOK);
    101c:	e9 ec       	ldi	r30, 0xC9	; 201
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	80 81       	ld	r24, Z
    1022:	8e 7f       	andi	r24, 0xFE	; 254
    1024:	80 83       	st	Z, r24
		
		//write buffer
		uint8_t recv = LINDAT;
    1026:	60 91 d2 00 	lds	r22, 0x00D2	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7e00d2>
		buffer_write(&rx_buffer, recv);	
    102a:	86 e0       	ldi	r24, 0x06	; 6
    102c:	91 e0       	ldi	r25, 0x01	; 1
    102e:	7f df       	rcall	.-258    	; 0xf2e <buffer_write>
	}
	
	// A byte was successfully transmitted by the UART
	if(LINSIR & (1 << LTXOK)) {
    1030:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    1034:	81 ff       	sbrs	r24, 1
    1036:	14 c0       	rjmp	.+40     	; 0x1060 <__vector_20+0x6e>
		//clear LTXOK
		LINSIR &= ~(1 << LTXOK);
    1038:	e9 ec       	ldi	r30, 0xC9	; 201
    103a:	f0 e0       	ldi	r31, 0x00	; 0
    103c:	80 81       	ld	r24, Z
    103e:	8d 7f       	andi	r24, 0xFD	; 253
    1040:	80 83       	st	Z, r24
		uint8_t data = buffer_read(&tx_buffer); 
    1042:	89 e8       	ldi	r24, 0x89	; 137
    1044:	91 e0       	ldi	r25, 0x01	; 1
    1046:	a6 df       	rcall	.-180    	; 0xf94 <buffer_read>
		LINDAT = data;
    1048:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7e00d2>
		
		if(buffer_empty(&tx_buffer)) {
    104c:	89 e8       	ldi	r24, 0x89	; 137
    104e:	91 e0       	ldi	r25, 0x01	; 1
    1050:	cb df       	rcall	.-106    	; 0xfe8 <buffer_empty>
    1052:	88 23       	and	r24, r24
			LINENIR  &= ~(1 << LENTXOK);
    1054:	29 f0       	breq	.+10     	; 0x1060 <__vector_20+0x6e>
    1056:	ea ec       	ldi	r30, 0xCA	; 202
    1058:	f0 e0       	ldi	r31, 0x00	; 0
    105a:	80 81       	ld	r24, Z
    105c:	8d 7f       	andi	r24, 0xFD	; 253
		}
	}
}
    105e:	80 83       	st	Z, r24
    1060:	ff 91       	pop	r31
    1062:	ef 91       	pop	r30
    1064:	bf 91       	pop	r27
    1066:	af 91       	pop	r26
    1068:	9f 91       	pop	r25
    106a:	8f 91       	pop	r24
    106c:	7f 91       	pop	r23
    106e:	6f 91       	pop	r22
    1070:	5f 91       	pop	r21
    1072:	4f 91       	pop	r20
    1074:	3f 91       	pop	r19
    1076:	2f 91       	pop	r18
    1078:	0f 90       	pop	r0
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	0f 90       	pop	r0
    107e:	1f 90       	pop	r1
    1080:	18 95       	reti

00001082 <uart_init>:


void uart_init(uint16_t baud){
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
	//Reset LIN/UART hardware
	LINCR = (1 << LSWRES);
    1086:	c8 ec       	ldi	r28, 0xC8	; 200
    1088:	d0 e0       	ldi	r29, 0x00	; 0
    108a:	20 e8       	ldi	r18, 0x80	; 128
    108c:	28 83       	st	Y, r18
	
	//Calculate, and set UART baud rate
	LINBRRH = (((F_CPU / baud) / 16) - 1) >> 8;
    108e:	9c 01       	movw	r18, r24
    1090:	40 e0       	ldi	r20, 0x00	; 0
    1092:	50 e0       	ldi	r21, 0x00	; 0
    1094:	60 e4       	ldi	r22, 0x40	; 64
    1096:	72 e4       	ldi	r23, 0x42	; 66
    1098:	8f e0       	ldi	r24, 0x0F	; 15
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	40 d0       	rcall	.+128    	; 0x111e <__divmodsi4>
    109e:	da 01       	movw	r26, r20
    10a0:	c9 01       	movw	r24, r18
    10a2:	01 97       	sbiw	r24, 0x01	; 1
    10a4:	a1 09       	sbc	r26, r1
    10a6:	b1 09       	sbc	r27, r1
    10a8:	89 2f       	mov	r24, r25
    10aa:	9a 2f       	mov	r25, r26
    10ac:	ab 2f       	mov	r26, r27
    10ae:	bb 27       	eor	r27, r27
    10b0:	a7 fd       	sbrc	r26, 7
    10b2:	ba 95       	dec	r27
    10b4:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
	LINBRRL = (((F_CPU / baud) / 16) - 1);
    10b8:	21 50       	subi	r18, 0x01	; 1
    10ba:	20 93 cd 00 	sts	0x00CD, r18	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
	
	//Bit sampling rate/re-sync
	LINBTR = (1 << LDISR) | (16 << LBT0);
    10be:	80 e9       	ldi	r24, 0x90	; 144
    10c0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>

	//RX interrupt
	LINENIR = (1 << LENRXOK);
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7e00ca>

	//Enable UART RX & TX
	LINCR = (1 << LENA) | (1 << LCMD2) | (1 << LCMD1) | (1 << LCMD0);
    10ca:	8f e0       	ldi	r24, 0x0F	; 15
    10cc:	88 83       	st	Y, r24

	sei();
    10ce:	78 94       	sei
}
    10d0:	df 91       	pop	r29
    10d2:	cf 91       	pop	r28
    10d4:	08 95       	ret

000010d6 <uart_putc>:
			
int uart_putc(char data, FILE* file) {
    10d6:	cf 93       	push	r28
    10d8:	c8 2f       	mov	r28, r24
	cli();
    10da:	f8 94       	cli
	// the buffer was empty, enable TX interrupt
	if(!(LINENIR & (1 << LENTXOK))) {
    10dc:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7e00ca>
    10e0:	81 fd       	sbrc	r24, 1
    10e2:	08 c0       	rjmp	.+16     	; 0x10f4 <uart_putc+0x1e>
		LINENIR |= (1 << LENTXOK);
    10e4:	ea ec       	ldi	r30, 0xCA	; 202
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	82 60       	ori	r24, 0x02	; 2
    10ec:	80 83       	st	Z, r24
		LINDAT = data;
    10ee:	c0 93 d2 00 	sts	0x00D2, r28	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7e00d2>
    10f2:	04 c0       	rjmp	.+8      	; 0x10fc <uart_putc+0x26>
	}
	else {
		// add data to buffer
		buffer_write(&tx_buffer, data);
    10f4:	6c 2f       	mov	r22, r28
    10f6:	89 e8       	ldi	r24, 0x89	; 137
    10f8:	91 e0       	ldi	r25, 0x01	; 1
    10fa:	19 df       	rcall	.-462    	; 0xf2e <buffer_write>
	}
	sei();
    10fc:	78 94       	sei
	return data;
}
    10fe:	8c 2f       	mov	r24, r28
    1100:	cc 0f       	add	r28, r28
    1102:	99 0b       	sbc	r25, r25
    1104:	cf 91       	pop	r28
    1106:	08 95       	ret

00001108 <uart_getc>:

uint8_t uart_getc(FILE* file) {
	cli();
    1108:	f8 94       	cli
	
	//while (buffer_empty(&rx_buffer));
	int data_read = buffer_read(&rx_buffer);
    110a:	86 e0       	ldi	r24, 0x06	; 6
    110c:	91 e0       	ldi	r25, 0x01	; 1
    110e:	42 df       	rcall	.-380    	; 0xf94 <buffer_read>
    1110:	90 e0       	ldi	r25, 0x00	; 0
	if(data_read == '\r') data_read = '\n';
    1112:	8d 30       	cpi	r24, 0x0D	; 13
    1114:	91 05       	cpc	r25, r1
    1116:	11 f4       	brne	.+4      	; 0x111c <uart_getc+0x14>
    1118:	8a e0       	ldi	r24, 0x0A	; 10
    111a:	90 e0       	ldi	r25, 0x00	; 0
		
	return data_read;
	sei();
    111c:	08 95       	ret

0000111e <__divmodsi4>:
    111e:	05 2e       	mov	r0, r21
    1120:	97 fb       	bst	r25, 7
    1122:	16 f4       	brtc	.+4      	; 0x1128 <__divmodsi4+0xa>
    1124:	00 94       	com	r0
    1126:	0f d0       	rcall	.+30     	; 0x1146 <__negsi2>
    1128:	57 fd       	sbrc	r21, 7
    112a:	05 d0       	rcall	.+10     	; 0x1136 <__divmodsi4_neg2>
    112c:	1a d0       	rcall	.+52     	; 0x1162 <__udivmodsi4>
    112e:	07 fc       	sbrc	r0, 7
    1130:	02 d0       	rcall	.+4      	; 0x1136 <__divmodsi4_neg2>
    1132:	46 f4       	brtc	.+16     	; 0x1144 <__divmodsi4_exit>
    1134:	08 c0       	rjmp	.+16     	; 0x1146 <__negsi2>

00001136 <__divmodsi4_neg2>:
    1136:	50 95       	com	r21
    1138:	40 95       	com	r20
    113a:	30 95       	com	r19
    113c:	21 95       	neg	r18
    113e:	3f 4f       	sbci	r19, 0xFF	; 255
    1140:	4f 4f       	sbci	r20, 0xFF	; 255
    1142:	5f 4f       	sbci	r21, 0xFF	; 255

00001144 <__divmodsi4_exit>:
    1144:	08 95       	ret

00001146 <__negsi2>:
    1146:	90 95       	com	r25
    1148:	80 95       	com	r24
    114a:	70 95       	com	r23
    114c:	61 95       	neg	r22
    114e:	7f 4f       	sbci	r23, 0xFF	; 255
    1150:	8f 4f       	sbci	r24, 0xFF	; 255
    1152:	9f 4f       	sbci	r25, 0xFF	; 255
    1154:	08 95       	ret

00001156 <__tablejump2__>:
    1156:	ee 0f       	add	r30, r30
    1158:	ff 1f       	adc	r31, r31
    115a:	05 90       	lpm	r0, Z+
    115c:	f4 91       	lpm	r31, Z
    115e:	e0 2d       	mov	r30, r0
    1160:	09 94       	ijmp

00001162 <__udivmodsi4>:
    1162:	a1 e2       	ldi	r26, 0x21	; 33
    1164:	1a 2e       	mov	r1, r26
    1166:	aa 1b       	sub	r26, r26
    1168:	bb 1b       	sub	r27, r27
    116a:	fd 01       	movw	r30, r26
    116c:	0d c0       	rjmp	.+26     	; 0x1188 <__udivmodsi4_ep>

0000116e <__udivmodsi4_loop>:
    116e:	aa 1f       	adc	r26, r26
    1170:	bb 1f       	adc	r27, r27
    1172:	ee 1f       	adc	r30, r30
    1174:	ff 1f       	adc	r31, r31
    1176:	a2 17       	cp	r26, r18
    1178:	b3 07       	cpc	r27, r19
    117a:	e4 07       	cpc	r30, r20
    117c:	f5 07       	cpc	r31, r21
    117e:	20 f0       	brcs	.+8      	; 0x1188 <__udivmodsi4_ep>
    1180:	a2 1b       	sub	r26, r18
    1182:	b3 0b       	sbc	r27, r19
    1184:	e4 0b       	sbc	r30, r20
    1186:	f5 0b       	sbc	r31, r21

00001188 <__udivmodsi4_ep>:
    1188:	66 1f       	adc	r22, r22
    118a:	77 1f       	adc	r23, r23
    118c:	88 1f       	adc	r24, r24
    118e:	99 1f       	adc	r25, r25
    1190:	1a 94       	dec	r1
    1192:	69 f7       	brne	.-38     	; 0x116e <__udivmodsi4_loop>
    1194:	60 95       	com	r22
    1196:	70 95       	com	r23
    1198:	80 95       	com	r24
    119a:	90 95       	com	r25
    119c:	9b 01       	movw	r18, r22
    119e:	ac 01       	movw	r20, r24
    11a0:	bd 01       	movw	r22, r26
    11a2:	cf 01       	movw	r24, r30
    11a4:	08 95       	ret

000011a6 <fdevopen>:
    11a6:	0f 93       	push	r16
    11a8:	1f 93       	push	r17
    11aa:	cf 93       	push	r28
    11ac:	df 93       	push	r29
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	31 f4       	brne	.+12     	; 0x11be <fdevopen+0x18>
    11b2:	61 15       	cp	r22, r1
    11b4:	71 05       	cpc	r23, r1
    11b6:	19 f4       	brne	.+6      	; 0x11be <fdevopen+0x18>
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	39 c0       	rjmp	.+114    	; 0x1230 <fdevopen+0x8a>
    11be:	8b 01       	movw	r16, r22
    11c0:	ec 01       	movw	r28, r24
    11c2:	6e e0       	ldi	r22, 0x0E	; 14
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	81 e0       	ldi	r24, 0x01	; 1
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	1c d2       	rcall	.+1080   	; 0x1604 <calloc>
    11cc:	fc 01       	movw	r30, r24
    11ce:	89 2b       	or	r24, r25
    11d0:	99 f3       	breq	.-26     	; 0x11b8 <fdevopen+0x12>
    11d2:	80 e8       	ldi	r24, 0x80	; 128
    11d4:	83 83       	std	Z+3, r24	; 0x03
    11d6:	01 15       	cp	r16, r1
    11d8:	11 05       	cpc	r17, r1
    11da:	71 f0       	breq	.+28     	; 0x11f8 <fdevopen+0x52>
    11dc:	13 87       	std	Z+11, r17	; 0x0b
    11de:	02 87       	std	Z+10, r16	; 0x0a
    11e0:	81 e8       	ldi	r24, 0x81	; 129
    11e2:	83 83       	std	Z+3, r24	; 0x03
    11e4:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <__iob>
    11e8:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <__iob+0x1>
    11ec:	89 2b       	or	r24, r25
    11ee:	21 f4       	brne	.+8      	; 0x11f8 <fdevopen+0x52>
    11f0:	f0 93 a1 02 	sts	0x02A1, r31	; 0x8002a1 <__iob+0x1>
    11f4:	e0 93 a0 02 	sts	0x02A0, r30	; 0x8002a0 <__iob>
    11f8:	20 97       	sbiw	r28, 0x00	; 0
    11fa:	c9 f0       	breq	.+50     	; 0x122e <fdevopen+0x88>
    11fc:	d1 87       	std	Z+9, r29	; 0x09
    11fe:	c0 87       	std	Z+8, r28	; 0x08
    1200:	83 81       	ldd	r24, Z+3	; 0x03
    1202:	82 60       	ori	r24, 0x02	; 2
    1204:	83 83       	std	Z+3, r24	; 0x03
    1206:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <__iob+0x2>
    120a:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <__iob+0x3>
    120e:	89 2b       	or	r24, r25
    1210:	71 f4       	brne	.+28     	; 0x122e <fdevopen+0x88>
    1212:	f0 93 a3 02 	sts	0x02A3, r31	; 0x8002a3 <__iob+0x3>
    1216:	e0 93 a2 02 	sts	0x02A2, r30	; 0x8002a2 <__iob+0x2>
    121a:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <__iob+0x4>
    121e:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <__iob+0x5>
    1222:	89 2b       	or	r24, r25
    1224:	21 f4       	brne	.+8      	; 0x122e <fdevopen+0x88>
    1226:	f0 93 a5 02 	sts	0x02A5, r31	; 0x8002a5 <__iob+0x5>
    122a:	e0 93 a4 02 	sts	0x02A4, r30	; 0x8002a4 <__iob+0x4>
    122e:	cf 01       	movw	r24, r30
    1230:	df 91       	pop	r29
    1232:	cf 91       	pop	r28
    1234:	1f 91       	pop	r17
    1236:	0f 91       	pop	r16
    1238:	08 95       	ret

0000123a <printf>:
    123a:	a0 e0       	ldi	r26, 0x00	; 0
    123c:	b0 e0       	ldi	r27, 0x00	; 0
    123e:	e2 e2       	ldi	r30, 0x22	; 34
    1240:	f9 e0       	ldi	r31, 0x09	; 9
    1242:	e2 c3       	rjmp	.+1988   	; 0x1a08 <__prologue_saves__+0x20>
    1244:	ae 01       	movw	r20, r28
    1246:	4b 5f       	subi	r20, 0xFB	; 251
    1248:	5f 4f       	sbci	r21, 0xFF	; 255
    124a:	fa 01       	movw	r30, r20
    124c:	61 91       	ld	r22, Z+
    124e:	71 91       	ld	r23, Z+
    1250:	af 01       	movw	r20, r30
    1252:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <__iob+0x2>
    1256:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <__iob+0x3>
    125a:	02 d0       	rcall	.+4      	; 0x1260 <vfprintf>
    125c:	e2 e0       	ldi	r30, 0x02	; 2
    125e:	f0 c3       	rjmp	.+2016   	; 0x1a40 <__epilogue_restores__+0x20>

00001260 <vfprintf>:
    1260:	ab e0       	ldi	r26, 0x0B	; 11
    1262:	b0 e0       	ldi	r27, 0x00	; 0
    1264:	e5 e3       	ldi	r30, 0x35	; 53
    1266:	f9 e0       	ldi	r31, 0x09	; 9
    1268:	bf c3       	rjmp	.+1918   	; 0x19e8 <__prologue_saves__>
    126a:	6c 01       	movw	r12, r24
    126c:	7b 01       	movw	r14, r22
    126e:	8a 01       	movw	r16, r20
    1270:	fc 01       	movw	r30, r24
    1272:	17 82       	std	Z+7, r1	; 0x07
    1274:	16 82       	std	Z+6, r1	; 0x06
    1276:	83 81       	ldd	r24, Z+3	; 0x03
    1278:	81 ff       	sbrs	r24, 1
    127a:	bf c1       	rjmp	.+894    	; 0x15fa <vfprintf+0x39a>
    127c:	ce 01       	movw	r24, r28
    127e:	01 96       	adiw	r24, 0x01	; 1
    1280:	3c 01       	movw	r6, r24
    1282:	f6 01       	movw	r30, r12
    1284:	93 81       	ldd	r25, Z+3	; 0x03
    1286:	f7 01       	movw	r30, r14
    1288:	93 fd       	sbrc	r25, 3
    128a:	85 91       	lpm	r24, Z+
    128c:	93 ff       	sbrs	r25, 3
    128e:	81 91       	ld	r24, Z+
    1290:	7f 01       	movw	r14, r30
    1292:	88 23       	and	r24, r24
    1294:	09 f4       	brne	.+2      	; 0x1298 <vfprintf+0x38>
    1296:	ad c1       	rjmp	.+858    	; 0x15f2 <vfprintf+0x392>
    1298:	85 32       	cpi	r24, 0x25	; 37
    129a:	39 f4       	brne	.+14     	; 0x12aa <vfprintf+0x4a>
    129c:	93 fd       	sbrc	r25, 3
    129e:	85 91       	lpm	r24, Z+
    12a0:	93 ff       	sbrs	r25, 3
    12a2:	81 91       	ld	r24, Z+
    12a4:	7f 01       	movw	r14, r30
    12a6:	85 32       	cpi	r24, 0x25	; 37
    12a8:	21 f4       	brne	.+8      	; 0x12b2 <vfprintf+0x52>
    12aa:	b6 01       	movw	r22, r12
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	02 d3       	rcall	.+1540   	; 0x18b4 <fputc>
    12b0:	e8 cf       	rjmp	.-48     	; 0x1282 <vfprintf+0x22>
    12b2:	91 2c       	mov	r9, r1
    12b4:	21 2c       	mov	r2, r1
    12b6:	31 2c       	mov	r3, r1
    12b8:	ff e1       	ldi	r31, 0x1F	; 31
    12ba:	f3 15       	cp	r31, r3
    12bc:	d8 f0       	brcs	.+54     	; 0x12f4 <vfprintf+0x94>
    12be:	8b 32       	cpi	r24, 0x2B	; 43
    12c0:	79 f0       	breq	.+30     	; 0x12e0 <vfprintf+0x80>
    12c2:	38 f4       	brcc	.+14     	; 0x12d2 <vfprintf+0x72>
    12c4:	80 32       	cpi	r24, 0x20	; 32
    12c6:	79 f0       	breq	.+30     	; 0x12e6 <vfprintf+0x86>
    12c8:	83 32       	cpi	r24, 0x23	; 35
    12ca:	a1 f4       	brne	.+40     	; 0x12f4 <vfprintf+0x94>
    12cc:	23 2d       	mov	r18, r3
    12ce:	20 61       	ori	r18, 0x10	; 16
    12d0:	1d c0       	rjmp	.+58     	; 0x130c <vfprintf+0xac>
    12d2:	8d 32       	cpi	r24, 0x2D	; 45
    12d4:	61 f0       	breq	.+24     	; 0x12ee <vfprintf+0x8e>
    12d6:	80 33       	cpi	r24, 0x30	; 48
    12d8:	69 f4       	brne	.+26     	; 0x12f4 <vfprintf+0x94>
    12da:	23 2d       	mov	r18, r3
    12dc:	21 60       	ori	r18, 0x01	; 1
    12de:	16 c0       	rjmp	.+44     	; 0x130c <vfprintf+0xac>
    12e0:	83 2d       	mov	r24, r3
    12e2:	82 60       	ori	r24, 0x02	; 2
    12e4:	38 2e       	mov	r3, r24
    12e6:	e3 2d       	mov	r30, r3
    12e8:	e4 60       	ori	r30, 0x04	; 4
    12ea:	3e 2e       	mov	r3, r30
    12ec:	2a c0       	rjmp	.+84     	; 0x1342 <vfprintf+0xe2>
    12ee:	f3 2d       	mov	r31, r3
    12f0:	f8 60       	ori	r31, 0x08	; 8
    12f2:	1d c0       	rjmp	.+58     	; 0x132e <vfprintf+0xce>
    12f4:	37 fc       	sbrc	r3, 7
    12f6:	2d c0       	rjmp	.+90     	; 0x1352 <vfprintf+0xf2>
    12f8:	20 ed       	ldi	r18, 0xD0	; 208
    12fa:	28 0f       	add	r18, r24
    12fc:	2a 30       	cpi	r18, 0x0A	; 10
    12fe:	40 f0       	brcs	.+16     	; 0x1310 <vfprintf+0xb0>
    1300:	8e 32       	cpi	r24, 0x2E	; 46
    1302:	b9 f4       	brne	.+46     	; 0x1332 <vfprintf+0xd2>
    1304:	36 fc       	sbrc	r3, 6
    1306:	75 c1       	rjmp	.+746    	; 0x15f2 <vfprintf+0x392>
    1308:	23 2d       	mov	r18, r3
    130a:	20 64       	ori	r18, 0x40	; 64
    130c:	32 2e       	mov	r3, r18
    130e:	19 c0       	rjmp	.+50     	; 0x1342 <vfprintf+0xe2>
    1310:	36 fe       	sbrs	r3, 6
    1312:	06 c0       	rjmp	.+12     	; 0x1320 <vfprintf+0xc0>
    1314:	8a e0       	ldi	r24, 0x0A	; 10
    1316:	98 9e       	mul	r9, r24
    1318:	20 0d       	add	r18, r0
    131a:	11 24       	eor	r1, r1
    131c:	92 2e       	mov	r9, r18
    131e:	11 c0       	rjmp	.+34     	; 0x1342 <vfprintf+0xe2>
    1320:	ea e0       	ldi	r30, 0x0A	; 10
    1322:	2e 9e       	mul	r2, r30
    1324:	20 0d       	add	r18, r0
    1326:	11 24       	eor	r1, r1
    1328:	22 2e       	mov	r2, r18
    132a:	f3 2d       	mov	r31, r3
    132c:	f0 62       	ori	r31, 0x20	; 32
    132e:	3f 2e       	mov	r3, r31
    1330:	08 c0       	rjmp	.+16     	; 0x1342 <vfprintf+0xe2>
    1332:	8c 36       	cpi	r24, 0x6C	; 108
    1334:	21 f4       	brne	.+8      	; 0x133e <vfprintf+0xde>
    1336:	83 2d       	mov	r24, r3
    1338:	80 68       	ori	r24, 0x80	; 128
    133a:	38 2e       	mov	r3, r24
    133c:	02 c0       	rjmp	.+4      	; 0x1342 <vfprintf+0xe2>
    133e:	88 36       	cpi	r24, 0x68	; 104
    1340:	41 f4       	brne	.+16     	; 0x1352 <vfprintf+0xf2>
    1342:	f7 01       	movw	r30, r14
    1344:	93 fd       	sbrc	r25, 3
    1346:	85 91       	lpm	r24, Z+
    1348:	93 ff       	sbrs	r25, 3
    134a:	81 91       	ld	r24, Z+
    134c:	7f 01       	movw	r14, r30
    134e:	81 11       	cpse	r24, r1
    1350:	b3 cf       	rjmp	.-154    	; 0x12b8 <vfprintf+0x58>
    1352:	98 2f       	mov	r25, r24
    1354:	9f 7d       	andi	r25, 0xDF	; 223
    1356:	95 54       	subi	r25, 0x45	; 69
    1358:	93 30       	cpi	r25, 0x03	; 3
    135a:	28 f4       	brcc	.+10     	; 0x1366 <vfprintf+0x106>
    135c:	0c 5f       	subi	r16, 0xFC	; 252
    135e:	1f 4f       	sbci	r17, 0xFF	; 255
    1360:	9f e3       	ldi	r25, 0x3F	; 63
    1362:	99 83       	std	Y+1, r25	; 0x01
    1364:	0d c0       	rjmp	.+26     	; 0x1380 <vfprintf+0x120>
    1366:	83 36       	cpi	r24, 0x63	; 99
    1368:	31 f0       	breq	.+12     	; 0x1376 <vfprintf+0x116>
    136a:	83 37       	cpi	r24, 0x73	; 115
    136c:	71 f0       	breq	.+28     	; 0x138a <vfprintf+0x12a>
    136e:	83 35       	cpi	r24, 0x53	; 83
    1370:	09 f0       	breq	.+2      	; 0x1374 <vfprintf+0x114>
    1372:	55 c0       	rjmp	.+170    	; 0x141e <vfprintf+0x1be>
    1374:	20 c0       	rjmp	.+64     	; 0x13b6 <vfprintf+0x156>
    1376:	f8 01       	movw	r30, r16
    1378:	80 81       	ld	r24, Z
    137a:	89 83       	std	Y+1, r24	; 0x01
    137c:	0e 5f       	subi	r16, 0xFE	; 254
    137e:	1f 4f       	sbci	r17, 0xFF	; 255
    1380:	88 24       	eor	r8, r8
    1382:	83 94       	inc	r8
    1384:	91 2c       	mov	r9, r1
    1386:	53 01       	movw	r10, r6
    1388:	12 c0       	rjmp	.+36     	; 0x13ae <vfprintf+0x14e>
    138a:	28 01       	movw	r4, r16
    138c:	f2 e0       	ldi	r31, 0x02	; 2
    138e:	4f 0e       	add	r4, r31
    1390:	51 1c       	adc	r5, r1
    1392:	f8 01       	movw	r30, r16
    1394:	a0 80       	ld	r10, Z
    1396:	b1 80       	ldd	r11, Z+1	; 0x01
    1398:	36 fe       	sbrs	r3, 6
    139a:	03 c0       	rjmp	.+6      	; 0x13a2 <vfprintf+0x142>
    139c:	69 2d       	mov	r22, r9
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	02 c0       	rjmp	.+4      	; 0x13a6 <vfprintf+0x146>
    13a2:	6f ef       	ldi	r22, 0xFF	; 255
    13a4:	7f ef       	ldi	r23, 0xFF	; 255
    13a6:	c5 01       	movw	r24, r10
    13a8:	7a d2       	rcall	.+1268   	; 0x189e <strnlen>
    13aa:	4c 01       	movw	r8, r24
    13ac:	82 01       	movw	r16, r4
    13ae:	f3 2d       	mov	r31, r3
    13b0:	ff 77       	andi	r31, 0x7F	; 127
    13b2:	3f 2e       	mov	r3, r31
    13b4:	15 c0       	rjmp	.+42     	; 0x13e0 <vfprintf+0x180>
    13b6:	28 01       	movw	r4, r16
    13b8:	22 e0       	ldi	r18, 0x02	; 2
    13ba:	42 0e       	add	r4, r18
    13bc:	51 1c       	adc	r5, r1
    13be:	f8 01       	movw	r30, r16
    13c0:	a0 80       	ld	r10, Z
    13c2:	b1 80       	ldd	r11, Z+1	; 0x01
    13c4:	36 fe       	sbrs	r3, 6
    13c6:	03 c0       	rjmp	.+6      	; 0x13ce <vfprintf+0x16e>
    13c8:	69 2d       	mov	r22, r9
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	02 c0       	rjmp	.+4      	; 0x13d2 <vfprintf+0x172>
    13ce:	6f ef       	ldi	r22, 0xFF	; 255
    13d0:	7f ef       	ldi	r23, 0xFF	; 255
    13d2:	c5 01       	movw	r24, r10
    13d4:	52 d2       	rcall	.+1188   	; 0x187a <strnlen_P>
    13d6:	4c 01       	movw	r8, r24
    13d8:	f3 2d       	mov	r31, r3
    13da:	f0 68       	ori	r31, 0x80	; 128
    13dc:	3f 2e       	mov	r3, r31
    13de:	82 01       	movw	r16, r4
    13e0:	33 fc       	sbrc	r3, 3
    13e2:	19 c0       	rjmp	.+50     	; 0x1416 <vfprintf+0x1b6>
    13e4:	82 2d       	mov	r24, r2
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	88 16       	cp	r8, r24
    13ea:	99 06       	cpc	r9, r25
    13ec:	a0 f4       	brcc	.+40     	; 0x1416 <vfprintf+0x1b6>
    13ee:	b6 01       	movw	r22, r12
    13f0:	80 e2       	ldi	r24, 0x20	; 32
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	5f d2       	rcall	.+1214   	; 0x18b4 <fputc>
    13f6:	2a 94       	dec	r2
    13f8:	f5 cf       	rjmp	.-22     	; 0x13e4 <vfprintf+0x184>
    13fa:	f5 01       	movw	r30, r10
    13fc:	37 fc       	sbrc	r3, 7
    13fe:	85 91       	lpm	r24, Z+
    1400:	37 fe       	sbrs	r3, 7
    1402:	81 91       	ld	r24, Z+
    1404:	5f 01       	movw	r10, r30
    1406:	b6 01       	movw	r22, r12
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	54 d2       	rcall	.+1192   	; 0x18b4 <fputc>
    140c:	21 10       	cpse	r2, r1
    140e:	2a 94       	dec	r2
    1410:	21 e0       	ldi	r18, 0x01	; 1
    1412:	82 1a       	sub	r8, r18
    1414:	91 08       	sbc	r9, r1
    1416:	81 14       	cp	r8, r1
    1418:	91 04       	cpc	r9, r1
    141a:	79 f7       	brne	.-34     	; 0x13fa <vfprintf+0x19a>
    141c:	e1 c0       	rjmp	.+450    	; 0x15e0 <vfprintf+0x380>
    141e:	84 36       	cpi	r24, 0x64	; 100
    1420:	11 f0       	breq	.+4      	; 0x1426 <vfprintf+0x1c6>
    1422:	89 36       	cpi	r24, 0x69	; 105
    1424:	39 f5       	brne	.+78     	; 0x1474 <vfprintf+0x214>
    1426:	f8 01       	movw	r30, r16
    1428:	37 fe       	sbrs	r3, 7
    142a:	07 c0       	rjmp	.+14     	; 0x143a <vfprintf+0x1da>
    142c:	60 81       	ld	r22, Z
    142e:	71 81       	ldd	r23, Z+1	; 0x01
    1430:	82 81       	ldd	r24, Z+2	; 0x02
    1432:	93 81       	ldd	r25, Z+3	; 0x03
    1434:	0c 5f       	subi	r16, 0xFC	; 252
    1436:	1f 4f       	sbci	r17, 0xFF	; 255
    1438:	08 c0       	rjmp	.+16     	; 0x144a <vfprintf+0x1ea>
    143a:	60 81       	ld	r22, Z
    143c:	71 81       	ldd	r23, Z+1	; 0x01
    143e:	07 2e       	mov	r0, r23
    1440:	00 0c       	add	r0, r0
    1442:	88 0b       	sbc	r24, r24
    1444:	99 0b       	sbc	r25, r25
    1446:	0e 5f       	subi	r16, 0xFE	; 254
    1448:	1f 4f       	sbci	r17, 0xFF	; 255
    144a:	f3 2d       	mov	r31, r3
    144c:	ff 76       	andi	r31, 0x6F	; 111
    144e:	3f 2e       	mov	r3, r31
    1450:	97 ff       	sbrs	r25, 7
    1452:	09 c0       	rjmp	.+18     	; 0x1466 <vfprintf+0x206>
    1454:	90 95       	com	r25
    1456:	80 95       	com	r24
    1458:	70 95       	com	r23
    145a:	61 95       	neg	r22
    145c:	7f 4f       	sbci	r23, 0xFF	; 255
    145e:	8f 4f       	sbci	r24, 0xFF	; 255
    1460:	9f 4f       	sbci	r25, 0xFF	; 255
    1462:	f0 68       	ori	r31, 0x80	; 128
    1464:	3f 2e       	mov	r3, r31
    1466:	2a e0       	ldi	r18, 0x0A	; 10
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	a3 01       	movw	r20, r6
    146c:	5f d2       	rcall	.+1214   	; 0x192c <__ultoa_invert>
    146e:	88 2e       	mov	r8, r24
    1470:	86 18       	sub	r8, r6
    1472:	44 c0       	rjmp	.+136    	; 0x14fc <vfprintf+0x29c>
    1474:	85 37       	cpi	r24, 0x75	; 117
    1476:	31 f4       	brne	.+12     	; 0x1484 <vfprintf+0x224>
    1478:	23 2d       	mov	r18, r3
    147a:	2f 7e       	andi	r18, 0xEF	; 239
    147c:	b2 2e       	mov	r11, r18
    147e:	2a e0       	ldi	r18, 0x0A	; 10
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	25 c0       	rjmp	.+74     	; 0x14ce <vfprintf+0x26e>
    1484:	93 2d       	mov	r25, r3
    1486:	99 7f       	andi	r25, 0xF9	; 249
    1488:	b9 2e       	mov	r11, r25
    148a:	8f 36       	cpi	r24, 0x6F	; 111
    148c:	c1 f0       	breq	.+48     	; 0x14be <vfprintf+0x25e>
    148e:	18 f4       	brcc	.+6      	; 0x1496 <vfprintf+0x236>
    1490:	88 35       	cpi	r24, 0x58	; 88
    1492:	79 f0       	breq	.+30     	; 0x14b2 <vfprintf+0x252>
    1494:	ae c0       	rjmp	.+348    	; 0x15f2 <vfprintf+0x392>
    1496:	80 37       	cpi	r24, 0x70	; 112
    1498:	19 f0       	breq	.+6      	; 0x14a0 <vfprintf+0x240>
    149a:	88 37       	cpi	r24, 0x78	; 120
    149c:	21 f0       	breq	.+8      	; 0x14a6 <vfprintf+0x246>
    149e:	a9 c0       	rjmp	.+338    	; 0x15f2 <vfprintf+0x392>
    14a0:	e9 2f       	mov	r30, r25
    14a2:	e0 61       	ori	r30, 0x10	; 16
    14a4:	be 2e       	mov	r11, r30
    14a6:	b4 fe       	sbrs	r11, 4
    14a8:	0d c0       	rjmp	.+26     	; 0x14c4 <vfprintf+0x264>
    14aa:	fb 2d       	mov	r31, r11
    14ac:	f4 60       	ori	r31, 0x04	; 4
    14ae:	bf 2e       	mov	r11, r31
    14b0:	09 c0       	rjmp	.+18     	; 0x14c4 <vfprintf+0x264>
    14b2:	34 fe       	sbrs	r3, 4
    14b4:	0a c0       	rjmp	.+20     	; 0x14ca <vfprintf+0x26a>
    14b6:	29 2f       	mov	r18, r25
    14b8:	26 60       	ori	r18, 0x06	; 6
    14ba:	b2 2e       	mov	r11, r18
    14bc:	06 c0       	rjmp	.+12     	; 0x14ca <vfprintf+0x26a>
    14be:	28 e0       	ldi	r18, 0x08	; 8
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	05 c0       	rjmp	.+10     	; 0x14ce <vfprintf+0x26e>
    14c4:	20 e1       	ldi	r18, 0x10	; 16
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <vfprintf+0x26e>
    14ca:	20 e1       	ldi	r18, 0x10	; 16
    14cc:	32 e0       	ldi	r19, 0x02	; 2
    14ce:	f8 01       	movw	r30, r16
    14d0:	b7 fe       	sbrs	r11, 7
    14d2:	07 c0       	rjmp	.+14     	; 0x14e2 <vfprintf+0x282>
    14d4:	60 81       	ld	r22, Z
    14d6:	71 81       	ldd	r23, Z+1	; 0x01
    14d8:	82 81       	ldd	r24, Z+2	; 0x02
    14da:	93 81       	ldd	r25, Z+3	; 0x03
    14dc:	0c 5f       	subi	r16, 0xFC	; 252
    14de:	1f 4f       	sbci	r17, 0xFF	; 255
    14e0:	06 c0       	rjmp	.+12     	; 0x14ee <vfprintf+0x28e>
    14e2:	60 81       	ld	r22, Z
    14e4:	71 81       	ldd	r23, Z+1	; 0x01
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	0e 5f       	subi	r16, 0xFE	; 254
    14ec:	1f 4f       	sbci	r17, 0xFF	; 255
    14ee:	a3 01       	movw	r20, r6
    14f0:	1d d2       	rcall	.+1082   	; 0x192c <__ultoa_invert>
    14f2:	88 2e       	mov	r8, r24
    14f4:	86 18       	sub	r8, r6
    14f6:	fb 2d       	mov	r31, r11
    14f8:	ff 77       	andi	r31, 0x7F	; 127
    14fa:	3f 2e       	mov	r3, r31
    14fc:	36 fe       	sbrs	r3, 6
    14fe:	0d c0       	rjmp	.+26     	; 0x151a <vfprintf+0x2ba>
    1500:	23 2d       	mov	r18, r3
    1502:	2e 7f       	andi	r18, 0xFE	; 254
    1504:	a2 2e       	mov	r10, r18
    1506:	89 14       	cp	r8, r9
    1508:	58 f4       	brcc	.+22     	; 0x1520 <vfprintf+0x2c0>
    150a:	34 fe       	sbrs	r3, 4
    150c:	0b c0       	rjmp	.+22     	; 0x1524 <vfprintf+0x2c4>
    150e:	32 fc       	sbrc	r3, 2
    1510:	09 c0       	rjmp	.+18     	; 0x1524 <vfprintf+0x2c4>
    1512:	83 2d       	mov	r24, r3
    1514:	8e 7e       	andi	r24, 0xEE	; 238
    1516:	a8 2e       	mov	r10, r24
    1518:	05 c0       	rjmp	.+10     	; 0x1524 <vfprintf+0x2c4>
    151a:	b8 2c       	mov	r11, r8
    151c:	a3 2c       	mov	r10, r3
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <vfprintf+0x2c6>
    1520:	b8 2c       	mov	r11, r8
    1522:	01 c0       	rjmp	.+2      	; 0x1526 <vfprintf+0x2c6>
    1524:	b9 2c       	mov	r11, r9
    1526:	a4 fe       	sbrs	r10, 4
    1528:	0f c0       	rjmp	.+30     	; 0x1548 <vfprintf+0x2e8>
    152a:	fe 01       	movw	r30, r28
    152c:	e8 0d       	add	r30, r8
    152e:	f1 1d       	adc	r31, r1
    1530:	80 81       	ld	r24, Z
    1532:	80 33       	cpi	r24, 0x30	; 48
    1534:	21 f4       	brne	.+8      	; 0x153e <vfprintf+0x2de>
    1536:	9a 2d       	mov	r25, r10
    1538:	99 7e       	andi	r25, 0xE9	; 233
    153a:	a9 2e       	mov	r10, r25
    153c:	09 c0       	rjmp	.+18     	; 0x1550 <vfprintf+0x2f0>
    153e:	a2 fe       	sbrs	r10, 2
    1540:	06 c0       	rjmp	.+12     	; 0x154e <vfprintf+0x2ee>
    1542:	b3 94       	inc	r11
    1544:	b3 94       	inc	r11
    1546:	04 c0       	rjmp	.+8      	; 0x1550 <vfprintf+0x2f0>
    1548:	8a 2d       	mov	r24, r10
    154a:	86 78       	andi	r24, 0x86	; 134
    154c:	09 f0       	breq	.+2      	; 0x1550 <vfprintf+0x2f0>
    154e:	b3 94       	inc	r11
    1550:	a3 fc       	sbrc	r10, 3
    1552:	10 c0       	rjmp	.+32     	; 0x1574 <vfprintf+0x314>
    1554:	a0 fe       	sbrs	r10, 0
    1556:	06 c0       	rjmp	.+12     	; 0x1564 <vfprintf+0x304>
    1558:	b2 14       	cp	r11, r2
    155a:	80 f4       	brcc	.+32     	; 0x157c <vfprintf+0x31c>
    155c:	28 0c       	add	r2, r8
    155e:	92 2c       	mov	r9, r2
    1560:	9b 18       	sub	r9, r11
    1562:	0d c0       	rjmp	.+26     	; 0x157e <vfprintf+0x31e>
    1564:	b2 14       	cp	r11, r2
    1566:	58 f4       	brcc	.+22     	; 0x157e <vfprintf+0x31e>
    1568:	b6 01       	movw	r22, r12
    156a:	80 e2       	ldi	r24, 0x20	; 32
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	a2 d1       	rcall	.+836    	; 0x18b4 <fputc>
    1570:	b3 94       	inc	r11
    1572:	f8 cf       	rjmp	.-16     	; 0x1564 <vfprintf+0x304>
    1574:	b2 14       	cp	r11, r2
    1576:	18 f4       	brcc	.+6      	; 0x157e <vfprintf+0x31e>
    1578:	2b 18       	sub	r2, r11
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <vfprintf+0x320>
    157c:	98 2c       	mov	r9, r8
    157e:	21 2c       	mov	r2, r1
    1580:	a4 fe       	sbrs	r10, 4
    1582:	0f c0       	rjmp	.+30     	; 0x15a2 <vfprintf+0x342>
    1584:	b6 01       	movw	r22, r12
    1586:	80 e3       	ldi	r24, 0x30	; 48
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	94 d1       	rcall	.+808    	; 0x18b4 <fputc>
    158c:	a2 fe       	sbrs	r10, 2
    158e:	16 c0       	rjmp	.+44     	; 0x15bc <vfprintf+0x35c>
    1590:	a1 fc       	sbrc	r10, 1
    1592:	03 c0       	rjmp	.+6      	; 0x159a <vfprintf+0x33a>
    1594:	88 e7       	ldi	r24, 0x78	; 120
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	02 c0       	rjmp	.+4      	; 0x159e <vfprintf+0x33e>
    159a:	88 e5       	ldi	r24, 0x58	; 88
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	b6 01       	movw	r22, r12
    15a0:	0c c0       	rjmp	.+24     	; 0x15ba <vfprintf+0x35a>
    15a2:	8a 2d       	mov	r24, r10
    15a4:	86 78       	andi	r24, 0x86	; 134
    15a6:	51 f0       	breq	.+20     	; 0x15bc <vfprintf+0x35c>
    15a8:	a1 fe       	sbrs	r10, 1
    15aa:	02 c0       	rjmp	.+4      	; 0x15b0 <vfprintf+0x350>
    15ac:	8b e2       	ldi	r24, 0x2B	; 43
    15ae:	01 c0       	rjmp	.+2      	; 0x15b2 <vfprintf+0x352>
    15b0:	80 e2       	ldi	r24, 0x20	; 32
    15b2:	a7 fc       	sbrc	r10, 7
    15b4:	8d e2       	ldi	r24, 0x2D	; 45
    15b6:	b6 01       	movw	r22, r12
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	7c d1       	rcall	.+760    	; 0x18b4 <fputc>
    15bc:	89 14       	cp	r8, r9
    15be:	30 f4       	brcc	.+12     	; 0x15cc <vfprintf+0x36c>
    15c0:	b6 01       	movw	r22, r12
    15c2:	80 e3       	ldi	r24, 0x30	; 48
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	76 d1       	rcall	.+748    	; 0x18b4 <fputc>
    15c8:	9a 94       	dec	r9
    15ca:	f8 cf       	rjmp	.-16     	; 0x15bc <vfprintf+0x35c>
    15cc:	8a 94       	dec	r8
    15ce:	f3 01       	movw	r30, r6
    15d0:	e8 0d       	add	r30, r8
    15d2:	f1 1d       	adc	r31, r1
    15d4:	80 81       	ld	r24, Z
    15d6:	b6 01       	movw	r22, r12
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	6c d1       	rcall	.+728    	; 0x18b4 <fputc>
    15dc:	81 10       	cpse	r8, r1
    15de:	f6 cf       	rjmp	.-20     	; 0x15cc <vfprintf+0x36c>
    15e0:	22 20       	and	r2, r2
    15e2:	09 f4       	brne	.+2      	; 0x15e6 <vfprintf+0x386>
    15e4:	4e ce       	rjmp	.-868    	; 0x1282 <vfprintf+0x22>
    15e6:	b6 01       	movw	r22, r12
    15e8:	80 e2       	ldi	r24, 0x20	; 32
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	63 d1       	rcall	.+710    	; 0x18b4 <fputc>
    15ee:	2a 94       	dec	r2
    15f0:	f7 cf       	rjmp	.-18     	; 0x15e0 <vfprintf+0x380>
    15f2:	f6 01       	movw	r30, r12
    15f4:	86 81       	ldd	r24, Z+6	; 0x06
    15f6:	97 81       	ldd	r25, Z+7	; 0x07
    15f8:	02 c0       	rjmp	.+4      	; 0x15fe <vfprintf+0x39e>
    15fa:	8f ef       	ldi	r24, 0xFF	; 255
    15fc:	9f ef       	ldi	r25, 0xFF	; 255
    15fe:	2b 96       	adiw	r28, 0x0b	; 11
    1600:	e2 e1       	ldi	r30, 0x12	; 18
    1602:	0e c2       	rjmp	.+1052   	; 0x1a20 <__epilogue_restores__>

00001604 <calloc>:
    1604:	0f 93       	push	r16
    1606:	1f 93       	push	r17
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	86 9f       	mul	r24, r22
    160e:	80 01       	movw	r16, r0
    1610:	87 9f       	mul	r24, r23
    1612:	10 0d       	add	r17, r0
    1614:	96 9f       	mul	r25, r22
    1616:	10 0d       	add	r17, r0
    1618:	11 24       	eor	r1, r1
    161a:	c8 01       	movw	r24, r16
    161c:	0d d0       	rcall	.+26     	; 0x1638 <malloc>
    161e:	ec 01       	movw	r28, r24
    1620:	00 97       	sbiw	r24, 0x00	; 0
    1622:	21 f0       	breq	.+8      	; 0x162c <calloc+0x28>
    1624:	a8 01       	movw	r20, r16
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	32 d1       	rcall	.+612    	; 0x1890 <memset>
    162c:	ce 01       	movw	r24, r28
    162e:	df 91       	pop	r29
    1630:	cf 91       	pop	r28
    1632:	1f 91       	pop	r17
    1634:	0f 91       	pop	r16
    1636:	08 95       	ret

00001638 <malloc>:
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	82 30       	cpi	r24, 0x02	; 2
    1642:	91 05       	cpc	r25, r1
    1644:	10 f4       	brcc	.+4      	; 0x164a <malloc+0x12>
    1646:	82 e0       	ldi	r24, 0x02	; 2
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	e0 91 a8 02 	lds	r30, 0x02A8	; 0x8002a8 <__flp>
    164e:	f0 91 a9 02 	lds	r31, 0x02A9	; 0x8002a9 <__flp+0x1>
    1652:	20 e0       	ldi	r18, 0x00	; 0
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	a0 e0       	ldi	r26, 0x00	; 0
    1658:	b0 e0       	ldi	r27, 0x00	; 0
    165a:	30 97       	sbiw	r30, 0x00	; 0
    165c:	19 f1       	breq	.+70     	; 0x16a4 <malloc+0x6c>
    165e:	40 81       	ld	r20, Z
    1660:	51 81       	ldd	r21, Z+1	; 0x01
    1662:	02 81       	ldd	r16, Z+2	; 0x02
    1664:	13 81       	ldd	r17, Z+3	; 0x03
    1666:	48 17       	cp	r20, r24
    1668:	59 07       	cpc	r21, r25
    166a:	c8 f0       	brcs	.+50     	; 0x169e <malloc+0x66>
    166c:	84 17       	cp	r24, r20
    166e:	95 07       	cpc	r25, r21
    1670:	69 f4       	brne	.+26     	; 0x168c <malloc+0x54>
    1672:	10 97       	sbiw	r26, 0x00	; 0
    1674:	31 f0       	breq	.+12     	; 0x1682 <malloc+0x4a>
    1676:	12 96       	adiw	r26, 0x02	; 2
    1678:	0c 93       	st	X, r16
    167a:	12 97       	sbiw	r26, 0x02	; 2
    167c:	13 96       	adiw	r26, 0x03	; 3
    167e:	1c 93       	st	X, r17
    1680:	27 c0       	rjmp	.+78     	; 0x16d0 <malloc+0x98>
    1682:	00 93 a8 02 	sts	0x02A8, r16	; 0x8002a8 <__flp>
    1686:	10 93 a9 02 	sts	0x02A9, r17	; 0x8002a9 <__flp+0x1>
    168a:	22 c0       	rjmp	.+68     	; 0x16d0 <malloc+0x98>
    168c:	21 15       	cp	r18, r1
    168e:	31 05       	cpc	r19, r1
    1690:	19 f0       	breq	.+6      	; 0x1698 <malloc+0x60>
    1692:	42 17       	cp	r20, r18
    1694:	53 07       	cpc	r21, r19
    1696:	18 f4       	brcc	.+6      	; 0x169e <malloc+0x66>
    1698:	9a 01       	movw	r18, r20
    169a:	bd 01       	movw	r22, r26
    169c:	ef 01       	movw	r28, r30
    169e:	df 01       	movw	r26, r30
    16a0:	f8 01       	movw	r30, r16
    16a2:	db cf       	rjmp	.-74     	; 0x165a <malloc+0x22>
    16a4:	21 15       	cp	r18, r1
    16a6:	31 05       	cpc	r19, r1
    16a8:	f9 f0       	breq	.+62     	; 0x16e8 <malloc+0xb0>
    16aa:	28 1b       	sub	r18, r24
    16ac:	39 0b       	sbc	r19, r25
    16ae:	24 30       	cpi	r18, 0x04	; 4
    16b0:	31 05       	cpc	r19, r1
    16b2:	80 f4       	brcc	.+32     	; 0x16d4 <malloc+0x9c>
    16b4:	8a 81       	ldd	r24, Y+2	; 0x02
    16b6:	9b 81       	ldd	r25, Y+3	; 0x03
    16b8:	61 15       	cp	r22, r1
    16ba:	71 05       	cpc	r23, r1
    16bc:	21 f0       	breq	.+8      	; 0x16c6 <malloc+0x8e>
    16be:	fb 01       	movw	r30, r22
    16c0:	93 83       	std	Z+3, r25	; 0x03
    16c2:	82 83       	std	Z+2, r24	; 0x02
    16c4:	04 c0       	rjmp	.+8      	; 0x16ce <malloc+0x96>
    16c6:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <__flp+0x1>
    16ca:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <__flp>
    16ce:	fe 01       	movw	r30, r28
    16d0:	32 96       	adiw	r30, 0x02	; 2
    16d2:	44 c0       	rjmp	.+136    	; 0x175c <malloc+0x124>
    16d4:	fe 01       	movw	r30, r28
    16d6:	e2 0f       	add	r30, r18
    16d8:	f3 1f       	adc	r31, r19
    16da:	81 93       	st	Z+, r24
    16dc:	91 93       	st	Z+, r25
    16de:	22 50       	subi	r18, 0x02	; 2
    16e0:	31 09       	sbc	r19, r1
    16e2:	39 83       	std	Y+1, r19	; 0x01
    16e4:	28 83       	st	Y, r18
    16e6:	3a c0       	rjmp	.+116    	; 0x175c <malloc+0x124>
    16e8:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <__brkval>
    16ec:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <__brkval+0x1>
    16f0:	23 2b       	or	r18, r19
    16f2:	41 f4       	brne	.+16     	; 0x1704 <malloc+0xcc>
    16f4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    16f8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    16fc:	30 93 a7 02 	sts	0x02A7, r19	; 0x8002a7 <__brkval+0x1>
    1700:	20 93 a6 02 	sts	0x02A6, r18	; 0x8002a6 <__brkval>
    1704:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1708:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    170c:	21 15       	cp	r18, r1
    170e:	31 05       	cpc	r19, r1
    1710:	41 f4       	brne	.+16     	; 0x1722 <malloc+0xea>
    1712:	2d b7       	in	r18, 0x3d	; 61
    1714:	3e b7       	in	r19, 0x3e	; 62
    1716:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    171a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    171e:	24 1b       	sub	r18, r20
    1720:	35 0b       	sbc	r19, r21
    1722:	e0 91 a6 02 	lds	r30, 0x02A6	; 0x8002a6 <__brkval>
    1726:	f0 91 a7 02 	lds	r31, 0x02A7	; 0x8002a7 <__brkval+0x1>
    172a:	e2 17       	cp	r30, r18
    172c:	f3 07       	cpc	r31, r19
    172e:	a0 f4       	brcc	.+40     	; 0x1758 <malloc+0x120>
    1730:	2e 1b       	sub	r18, r30
    1732:	3f 0b       	sbc	r19, r31
    1734:	28 17       	cp	r18, r24
    1736:	39 07       	cpc	r19, r25
    1738:	78 f0       	brcs	.+30     	; 0x1758 <malloc+0x120>
    173a:	ac 01       	movw	r20, r24
    173c:	4e 5f       	subi	r20, 0xFE	; 254
    173e:	5f 4f       	sbci	r21, 0xFF	; 255
    1740:	24 17       	cp	r18, r20
    1742:	35 07       	cpc	r19, r21
    1744:	48 f0       	brcs	.+18     	; 0x1758 <malloc+0x120>
    1746:	4e 0f       	add	r20, r30
    1748:	5f 1f       	adc	r21, r31
    174a:	50 93 a7 02 	sts	0x02A7, r21	; 0x8002a7 <__brkval+0x1>
    174e:	40 93 a6 02 	sts	0x02A6, r20	; 0x8002a6 <__brkval>
    1752:	81 93       	st	Z+, r24
    1754:	91 93       	st	Z+, r25
    1756:	02 c0       	rjmp	.+4      	; 0x175c <malloc+0x124>
    1758:	e0 e0       	ldi	r30, 0x00	; 0
    175a:	f0 e0       	ldi	r31, 0x00	; 0
    175c:	cf 01       	movw	r24, r30
    175e:	df 91       	pop	r29
    1760:	cf 91       	pop	r28
    1762:	1f 91       	pop	r17
    1764:	0f 91       	pop	r16
    1766:	08 95       	ret

00001768 <free>:
    1768:	cf 93       	push	r28
    176a:	df 93       	push	r29
    176c:	00 97       	sbiw	r24, 0x00	; 0
    176e:	09 f4       	brne	.+2      	; 0x1772 <free+0xa>
    1770:	81 c0       	rjmp	.+258    	; 0x1874 <free+0x10c>
    1772:	fc 01       	movw	r30, r24
    1774:	32 97       	sbiw	r30, 0x02	; 2
    1776:	13 82       	std	Z+3, r1	; 0x03
    1778:	12 82       	std	Z+2, r1	; 0x02
    177a:	a0 91 a8 02 	lds	r26, 0x02A8	; 0x8002a8 <__flp>
    177e:	b0 91 a9 02 	lds	r27, 0x02A9	; 0x8002a9 <__flp+0x1>
    1782:	10 97       	sbiw	r26, 0x00	; 0
    1784:	81 f4       	brne	.+32     	; 0x17a6 <free+0x3e>
    1786:	20 81       	ld	r18, Z
    1788:	31 81       	ldd	r19, Z+1	; 0x01
    178a:	82 0f       	add	r24, r18
    178c:	93 1f       	adc	r25, r19
    178e:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <__brkval>
    1792:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <__brkval+0x1>
    1796:	28 17       	cp	r18, r24
    1798:	39 07       	cpc	r19, r25
    179a:	51 f5       	brne	.+84     	; 0x17f0 <free+0x88>
    179c:	f0 93 a7 02 	sts	0x02A7, r31	; 0x8002a7 <__brkval+0x1>
    17a0:	e0 93 a6 02 	sts	0x02A6, r30	; 0x8002a6 <__brkval>
    17a4:	67 c0       	rjmp	.+206    	; 0x1874 <free+0x10c>
    17a6:	ed 01       	movw	r28, r26
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	ce 17       	cp	r28, r30
    17ae:	df 07       	cpc	r29, r31
    17b0:	40 f4       	brcc	.+16     	; 0x17c2 <free+0x5a>
    17b2:	4a 81       	ldd	r20, Y+2	; 0x02
    17b4:	5b 81       	ldd	r21, Y+3	; 0x03
    17b6:	9e 01       	movw	r18, r28
    17b8:	41 15       	cp	r20, r1
    17ba:	51 05       	cpc	r21, r1
    17bc:	f1 f0       	breq	.+60     	; 0x17fa <free+0x92>
    17be:	ea 01       	movw	r28, r20
    17c0:	f5 cf       	rjmp	.-22     	; 0x17ac <free+0x44>
    17c2:	d3 83       	std	Z+3, r29	; 0x03
    17c4:	c2 83       	std	Z+2, r28	; 0x02
    17c6:	40 81       	ld	r20, Z
    17c8:	51 81       	ldd	r21, Z+1	; 0x01
    17ca:	84 0f       	add	r24, r20
    17cc:	95 1f       	adc	r25, r21
    17ce:	c8 17       	cp	r28, r24
    17d0:	d9 07       	cpc	r29, r25
    17d2:	59 f4       	brne	.+22     	; 0x17ea <free+0x82>
    17d4:	88 81       	ld	r24, Y
    17d6:	99 81       	ldd	r25, Y+1	; 0x01
    17d8:	84 0f       	add	r24, r20
    17da:	95 1f       	adc	r25, r21
    17dc:	02 96       	adiw	r24, 0x02	; 2
    17de:	91 83       	std	Z+1, r25	; 0x01
    17e0:	80 83       	st	Z, r24
    17e2:	8a 81       	ldd	r24, Y+2	; 0x02
    17e4:	9b 81       	ldd	r25, Y+3	; 0x03
    17e6:	93 83       	std	Z+3, r25	; 0x03
    17e8:	82 83       	std	Z+2, r24	; 0x02
    17ea:	21 15       	cp	r18, r1
    17ec:	31 05       	cpc	r19, r1
    17ee:	29 f4       	brne	.+10     	; 0x17fa <free+0x92>
    17f0:	f0 93 a9 02 	sts	0x02A9, r31	; 0x8002a9 <__flp+0x1>
    17f4:	e0 93 a8 02 	sts	0x02A8, r30	; 0x8002a8 <__flp>
    17f8:	3d c0       	rjmp	.+122    	; 0x1874 <free+0x10c>
    17fa:	e9 01       	movw	r28, r18
    17fc:	fb 83       	std	Y+3, r31	; 0x03
    17fe:	ea 83       	std	Y+2, r30	; 0x02
    1800:	49 91       	ld	r20, Y+
    1802:	59 91       	ld	r21, Y+
    1804:	c4 0f       	add	r28, r20
    1806:	d5 1f       	adc	r29, r21
    1808:	ec 17       	cp	r30, r28
    180a:	fd 07       	cpc	r31, r29
    180c:	61 f4       	brne	.+24     	; 0x1826 <free+0xbe>
    180e:	80 81       	ld	r24, Z
    1810:	91 81       	ldd	r25, Z+1	; 0x01
    1812:	84 0f       	add	r24, r20
    1814:	95 1f       	adc	r25, r21
    1816:	02 96       	adiw	r24, 0x02	; 2
    1818:	e9 01       	movw	r28, r18
    181a:	99 83       	std	Y+1, r25	; 0x01
    181c:	88 83       	st	Y, r24
    181e:	82 81       	ldd	r24, Z+2	; 0x02
    1820:	93 81       	ldd	r25, Z+3	; 0x03
    1822:	9b 83       	std	Y+3, r25	; 0x03
    1824:	8a 83       	std	Y+2, r24	; 0x02
    1826:	e0 e0       	ldi	r30, 0x00	; 0
    1828:	f0 e0       	ldi	r31, 0x00	; 0
    182a:	12 96       	adiw	r26, 0x02	; 2
    182c:	8d 91       	ld	r24, X+
    182e:	9c 91       	ld	r25, X
    1830:	13 97       	sbiw	r26, 0x03	; 3
    1832:	00 97       	sbiw	r24, 0x00	; 0
    1834:	19 f0       	breq	.+6      	; 0x183c <free+0xd4>
    1836:	fd 01       	movw	r30, r26
    1838:	dc 01       	movw	r26, r24
    183a:	f7 cf       	rjmp	.-18     	; 0x182a <free+0xc2>
    183c:	8d 91       	ld	r24, X+
    183e:	9c 91       	ld	r25, X
    1840:	11 97       	sbiw	r26, 0x01	; 1
    1842:	9d 01       	movw	r18, r26
    1844:	2e 5f       	subi	r18, 0xFE	; 254
    1846:	3f 4f       	sbci	r19, 0xFF	; 255
    1848:	82 0f       	add	r24, r18
    184a:	93 1f       	adc	r25, r19
    184c:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <__brkval>
    1850:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <__brkval+0x1>
    1854:	28 17       	cp	r18, r24
    1856:	39 07       	cpc	r19, r25
    1858:	69 f4       	brne	.+26     	; 0x1874 <free+0x10c>
    185a:	30 97       	sbiw	r30, 0x00	; 0
    185c:	29 f4       	brne	.+10     	; 0x1868 <free+0x100>
    185e:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <__flp+0x1>
    1862:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <__flp>
    1866:	02 c0       	rjmp	.+4      	; 0x186c <free+0x104>
    1868:	13 82       	std	Z+3, r1	; 0x03
    186a:	12 82       	std	Z+2, r1	; 0x02
    186c:	b0 93 a7 02 	sts	0x02A7, r27	; 0x8002a7 <__brkval+0x1>
    1870:	a0 93 a6 02 	sts	0x02A6, r26	; 0x8002a6 <__brkval>
    1874:	df 91       	pop	r29
    1876:	cf 91       	pop	r28
    1878:	08 95       	ret

0000187a <strnlen_P>:
    187a:	fc 01       	movw	r30, r24
    187c:	05 90       	lpm	r0, Z+
    187e:	61 50       	subi	r22, 0x01	; 1
    1880:	70 40       	sbci	r23, 0x00	; 0
    1882:	01 10       	cpse	r0, r1
    1884:	d8 f7       	brcc	.-10     	; 0x187c <strnlen_P+0x2>
    1886:	80 95       	com	r24
    1888:	90 95       	com	r25
    188a:	8e 0f       	add	r24, r30
    188c:	9f 1f       	adc	r25, r31
    188e:	08 95       	ret

00001890 <memset>:
    1890:	dc 01       	movw	r26, r24
    1892:	01 c0       	rjmp	.+2      	; 0x1896 <memset+0x6>
    1894:	6d 93       	st	X+, r22
    1896:	41 50       	subi	r20, 0x01	; 1
    1898:	50 40       	sbci	r21, 0x00	; 0
    189a:	e0 f7       	brcc	.-8      	; 0x1894 <memset+0x4>
    189c:	08 95       	ret

0000189e <strnlen>:
    189e:	fc 01       	movw	r30, r24
    18a0:	61 50       	subi	r22, 0x01	; 1
    18a2:	70 40       	sbci	r23, 0x00	; 0
    18a4:	01 90       	ld	r0, Z+
    18a6:	01 10       	cpse	r0, r1
    18a8:	d8 f7       	brcc	.-10     	; 0x18a0 <strnlen+0x2>
    18aa:	80 95       	com	r24
    18ac:	90 95       	com	r25
    18ae:	8e 0f       	add	r24, r30
    18b0:	9f 1f       	adc	r25, r31
    18b2:	08 95       	ret

000018b4 <fputc>:
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	fb 01       	movw	r30, r22
    18be:	23 81       	ldd	r18, Z+3	; 0x03
    18c0:	21 fd       	sbrc	r18, 1
    18c2:	03 c0       	rjmp	.+6      	; 0x18ca <fputc+0x16>
    18c4:	8f ef       	ldi	r24, 0xFF	; 255
    18c6:	9f ef       	ldi	r25, 0xFF	; 255
    18c8:	2c c0       	rjmp	.+88     	; 0x1922 <fputc+0x6e>
    18ca:	22 ff       	sbrs	r18, 2
    18cc:	16 c0       	rjmp	.+44     	; 0x18fa <fputc+0x46>
    18ce:	46 81       	ldd	r20, Z+6	; 0x06
    18d0:	57 81       	ldd	r21, Z+7	; 0x07
    18d2:	24 81       	ldd	r18, Z+4	; 0x04
    18d4:	35 81       	ldd	r19, Z+5	; 0x05
    18d6:	42 17       	cp	r20, r18
    18d8:	53 07       	cpc	r21, r19
    18da:	44 f4       	brge	.+16     	; 0x18ec <fputc+0x38>
    18dc:	a0 81       	ld	r26, Z
    18de:	b1 81       	ldd	r27, Z+1	; 0x01
    18e0:	9d 01       	movw	r18, r26
    18e2:	2f 5f       	subi	r18, 0xFF	; 255
    18e4:	3f 4f       	sbci	r19, 0xFF	; 255
    18e6:	31 83       	std	Z+1, r19	; 0x01
    18e8:	20 83       	st	Z, r18
    18ea:	8c 93       	st	X, r24
    18ec:	26 81       	ldd	r18, Z+6	; 0x06
    18ee:	37 81       	ldd	r19, Z+7	; 0x07
    18f0:	2f 5f       	subi	r18, 0xFF	; 255
    18f2:	3f 4f       	sbci	r19, 0xFF	; 255
    18f4:	37 83       	std	Z+7, r19	; 0x07
    18f6:	26 83       	std	Z+6, r18	; 0x06
    18f8:	14 c0       	rjmp	.+40     	; 0x1922 <fputc+0x6e>
    18fa:	8b 01       	movw	r16, r22
    18fc:	ec 01       	movw	r28, r24
    18fe:	fb 01       	movw	r30, r22
    1900:	00 84       	ldd	r0, Z+8	; 0x08
    1902:	f1 85       	ldd	r31, Z+9	; 0x09
    1904:	e0 2d       	mov	r30, r0
    1906:	09 95       	icall
    1908:	89 2b       	or	r24, r25
    190a:	e1 f6       	brne	.-72     	; 0x18c4 <fputc+0x10>
    190c:	d8 01       	movw	r26, r16
    190e:	16 96       	adiw	r26, 0x06	; 6
    1910:	8d 91       	ld	r24, X+
    1912:	9c 91       	ld	r25, X
    1914:	17 97       	sbiw	r26, 0x07	; 7
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	17 96       	adiw	r26, 0x07	; 7
    191a:	9c 93       	st	X, r25
    191c:	8e 93       	st	-X, r24
    191e:	16 97       	sbiw	r26, 0x06	; 6
    1920:	ce 01       	movw	r24, r28
    1922:	df 91       	pop	r29
    1924:	cf 91       	pop	r28
    1926:	1f 91       	pop	r17
    1928:	0f 91       	pop	r16
    192a:	08 95       	ret

0000192c <__ultoa_invert>:
    192c:	fa 01       	movw	r30, r20
    192e:	aa 27       	eor	r26, r26
    1930:	28 30       	cpi	r18, 0x08	; 8
    1932:	51 f1       	breq	.+84     	; 0x1988 <__ultoa_invert+0x5c>
    1934:	20 31       	cpi	r18, 0x10	; 16
    1936:	81 f1       	breq	.+96     	; 0x1998 <__ultoa_invert+0x6c>
    1938:	e8 94       	clt
    193a:	6f 93       	push	r22
    193c:	6e 7f       	andi	r22, 0xFE	; 254
    193e:	6e 5f       	subi	r22, 0xFE	; 254
    1940:	7f 4f       	sbci	r23, 0xFF	; 255
    1942:	8f 4f       	sbci	r24, 0xFF	; 255
    1944:	9f 4f       	sbci	r25, 0xFF	; 255
    1946:	af 4f       	sbci	r26, 0xFF	; 255
    1948:	b1 e0       	ldi	r27, 0x01	; 1
    194a:	3e d0       	rcall	.+124    	; 0x19c8 <__ultoa_invert+0x9c>
    194c:	b4 e0       	ldi	r27, 0x04	; 4
    194e:	3c d0       	rcall	.+120    	; 0x19c8 <__ultoa_invert+0x9c>
    1950:	67 0f       	add	r22, r23
    1952:	78 1f       	adc	r23, r24
    1954:	89 1f       	adc	r24, r25
    1956:	9a 1f       	adc	r25, r26
    1958:	a1 1d       	adc	r26, r1
    195a:	68 0f       	add	r22, r24
    195c:	79 1f       	adc	r23, r25
    195e:	8a 1f       	adc	r24, r26
    1960:	91 1d       	adc	r25, r1
    1962:	a1 1d       	adc	r26, r1
    1964:	6a 0f       	add	r22, r26
    1966:	71 1d       	adc	r23, r1
    1968:	81 1d       	adc	r24, r1
    196a:	91 1d       	adc	r25, r1
    196c:	a1 1d       	adc	r26, r1
    196e:	20 d0       	rcall	.+64     	; 0x19b0 <__ultoa_invert+0x84>
    1970:	09 f4       	brne	.+2      	; 0x1974 <__ultoa_invert+0x48>
    1972:	68 94       	set
    1974:	3f 91       	pop	r19
    1976:	2a e0       	ldi	r18, 0x0A	; 10
    1978:	26 9f       	mul	r18, r22
    197a:	11 24       	eor	r1, r1
    197c:	30 19       	sub	r19, r0
    197e:	30 5d       	subi	r19, 0xD0	; 208
    1980:	31 93       	st	Z+, r19
    1982:	de f6       	brtc	.-74     	; 0x193a <__ultoa_invert+0xe>
    1984:	cf 01       	movw	r24, r30
    1986:	08 95       	ret
    1988:	46 2f       	mov	r20, r22
    198a:	47 70       	andi	r20, 0x07	; 7
    198c:	40 5d       	subi	r20, 0xD0	; 208
    198e:	41 93       	st	Z+, r20
    1990:	b3 e0       	ldi	r27, 0x03	; 3
    1992:	0f d0       	rcall	.+30     	; 0x19b2 <__ultoa_invert+0x86>
    1994:	c9 f7       	brne	.-14     	; 0x1988 <__ultoa_invert+0x5c>
    1996:	f6 cf       	rjmp	.-20     	; 0x1984 <__ultoa_invert+0x58>
    1998:	46 2f       	mov	r20, r22
    199a:	4f 70       	andi	r20, 0x0F	; 15
    199c:	40 5d       	subi	r20, 0xD0	; 208
    199e:	4a 33       	cpi	r20, 0x3A	; 58
    19a0:	18 f0       	brcs	.+6      	; 0x19a8 <__ultoa_invert+0x7c>
    19a2:	49 5d       	subi	r20, 0xD9	; 217
    19a4:	31 fd       	sbrc	r19, 1
    19a6:	40 52       	subi	r20, 0x20	; 32
    19a8:	41 93       	st	Z+, r20
    19aa:	02 d0       	rcall	.+4      	; 0x19b0 <__ultoa_invert+0x84>
    19ac:	a9 f7       	brne	.-22     	; 0x1998 <__ultoa_invert+0x6c>
    19ae:	ea cf       	rjmp	.-44     	; 0x1984 <__ultoa_invert+0x58>
    19b0:	b4 e0       	ldi	r27, 0x04	; 4
    19b2:	a6 95       	lsr	r26
    19b4:	97 95       	ror	r25
    19b6:	87 95       	ror	r24
    19b8:	77 95       	ror	r23
    19ba:	67 95       	ror	r22
    19bc:	ba 95       	dec	r27
    19be:	c9 f7       	brne	.-14     	; 0x19b2 <__ultoa_invert+0x86>
    19c0:	00 97       	sbiw	r24, 0x00	; 0
    19c2:	61 05       	cpc	r22, r1
    19c4:	71 05       	cpc	r23, r1
    19c6:	08 95       	ret
    19c8:	9b 01       	movw	r18, r22
    19ca:	ac 01       	movw	r20, r24
    19cc:	0a 2e       	mov	r0, r26
    19ce:	06 94       	lsr	r0
    19d0:	57 95       	ror	r21
    19d2:	47 95       	ror	r20
    19d4:	37 95       	ror	r19
    19d6:	27 95       	ror	r18
    19d8:	ba 95       	dec	r27
    19da:	c9 f7       	brne	.-14     	; 0x19ce <__ultoa_invert+0xa2>
    19dc:	62 0f       	add	r22, r18
    19de:	73 1f       	adc	r23, r19
    19e0:	84 1f       	adc	r24, r20
    19e2:	95 1f       	adc	r25, r21
    19e4:	a0 1d       	adc	r26, r0
    19e6:	08 95       	ret

000019e8 <__prologue_saves__>:
    19e8:	2f 92       	push	r2
    19ea:	3f 92       	push	r3
    19ec:	4f 92       	push	r4
    19ee:	5f 92       	push	r5
    19f0:	6f 92       	push	r6
    19f2:	7f 92       	push	r7
    19f4:	8f 92       	push	r8
    19f6:	9f 92       	push	r9
    19f8:	af 92       	push	r10
    19fa:	bf 92       	push	r11
    19fc:	cf 92       	push	r12
    19fe:	df 92       	push	r13
    1a00:	ef 92       	push	r14
    1a02:	ff 92       	push	r15
    1a04:	0f 93       	push	r16
    1a06:	1f 93       	push	r17
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	cd b7       	in	r28, 0x3d	; 61
    1a0e:	de b7       	in	r29, 0x3e	; 62
    1a10:	ca 1b       	sub	r28, r26
    1a12:	db 0b       	sbc	r29, r27
    1a14:	0f b6       	in	r0, 0x3f	; 63
    1a16:	f8 94       	cli
    1a18:	de bf       	out	0x3e, r29	; 62
    1a1a:	0f be       	out	0x3f, r0	; 63
    1a1c:	cd bf       	out	0x3d, r28	; 61
    1a1e:	09 94       	ijmp

00001a20 <__epilogue_restores__>:
    1a20:	2a 88       	ldd	r2, Y+18	; 0x12
    1a22:	39 88       	ldd	r3, Y+17	; 0x11
    1a24:	48 88       	ldd	r4, Y+16	; 0x10
    1a26:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a28:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a2a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a2c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a2e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a30:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a32:	b9 84       	ldd	r11, Y+9	; 0x09
    1a34:	c8 84       	ldd	r12, Y+8	; 0x08
    1a36:	df 80       	ldd	r13, Y+7	; 0x07
    1a38:	ee 80       	ldd	r14, Y+6	; 0x06
    1a3a:	fd 80       	ldd	r15, Y+5	; 0x05
    1a3c:	0c 81       	ldd	r16, Y+4	; 0x04
    1a3e:	1b 81       	ldd	r17, Y+3	; 0x03
    1a40:	aa 81       	ldd	r26, Y+2	; 0x02
    1a42:	b9 81       	ldd	r27, Y+1	; 0x01
    1a44:	ce 0f       	add	r28, r30
    1a46:	d1 1d       	adc	r29, r1
    1a48:	0f b6       	in	r0, 0x3f	; 63
    1a4a:	f8 94       	cli
    1a4c:	de bf       	out	0x3e, r29	; 62
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	cd bf       	out	0x3d, r28	; 61
    1a52:	ed 01       	movw	r28, r26
    1a54:	08 95       	ret

00001a56 <_exit>:
    1a56:	f8 94       	cli

00001a58 <__stop_program>:
    1a58:	ff cf       	rjmp	.-2      	; 0x1a58 <__stop_program>
